<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cheng102e的博客</title>
  
  <subtitle>缘何不懂，坚持不懈磨砺精炼</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cheng102e.github.io/"/>
  <updated>2020-01-01T03:42:43.707Z</updated>
  <id>https://cheng102e.github.io/</id>
  
  <author>
    <name>cheng102e</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode 69. Sqrt(x)</title>
    <link href="https://cheng102e.github.io/LeetCode%2066.%20Plus%20One.html"/>
    <id>https://cheng102e.github.io/LeetCode 66. Plus One.html</id>
    <published>2020-01-01T03:22:00.000Z</published>
    <updated>2020-01-01T03:42:43.707Z</updated>
    
    <content type="html"><![CDATA[<h2 id="69-Sqrt-x-（x-的平方根）"><a href="#69-Sqrt-x-（x-的平方根）" class="headerlink" title="69. Sqrt(x)（x 的平方根）"></a>69. Sqrt(x)（x 的平方根）</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://leetcode-cn.com/problems/sqrtx" target="_blank" rel="noopener">https://leetcode-cn.com/problems/sqrtx</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>实现 int sqrt(int x) 函数。</p><p>计算并返回 x 的平方根，其中 x 是非负整数。</p><p>由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。</p><p>示例 1:</p><p>输入: 4<br>输出: 2<br>示例 2:</p><p>输入: 8<br>输出: 2<br>说明: 8 的平方根是 2.82842…,<br>     由于返回类型是整数，小数部分将被舍去。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>平方根的求法，要么用牛顿迭代法，要么二分法，（遍历也行，但是会超时），设1，x一个开始一个结束，二分法找答案，需要注意的是要采用x/mid&gt;mid,不然会超出范围。<br>2020的第一篇，又是热爱学习的一年。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public static int mySqrt(int x) &#123;</span><br><span class="line">    if (x == 1 || x == 0) &#123;</span><br><span class="line">      return x;</span><br><span class="line">    &#125;</span><br><span class="line">    int start = 0;</span><br><span class="line">    int end = x ;</span><br><span class="line">    while (end - start &gt;= 1) &#123;</span><br><span class="line">      int mid = (start + end) / 2;</span><br><span class="line"></span><br><span class="line">      if (x / mid &gt; mid) &#123;</span><br><span class="line">        start = mid;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        end = mid;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return start;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;69-Sqrt-x-（x-的平方根）&quot;&gt;&lt;a href=&quot;#69-Sqrt-x-（x-的平方根）&quot; class=&quot;headerlink&quot; title=&quot;69. Sqrt(x)（x 的平方根）&quot;&gt;&lt;/a&gt;69. Sqrt(x)（x 的平方根）&lt;/h2&gt;&lt;h3 id=
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://cheng102e.github.io/categories/LeetCode/"/>
    
    
  </entry>
  
  <entry>
    <title>LeetCode 70. Climbing Stairs</title>
    <link href="https://cheng102e.github.io/LeetCode%2070.%20Climbing%20Stairs.html"/>
    <id>https://cheng102e.github.io/LeetCode 70. Climbing Stairs.html</id>
    <published>2019-12-28T11:08:00.000Z</published>
    <updated>2019-12-29T13:22:06.794Z</updated>
    
    <content type="html"><![CDATA[<h2 id="70-Climbing-Stairs（两数之和）"><a href="#70-Climbing-Stairs（两数之和）" class="headerlink" title="70. Climbing Stairs（两数之和）"></a>70. Climbing Stairs（两数之和）</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://leetcode-cn.com/problems/climbing-stairs" target="_blank" rel="noopener">https://leetcode-cn.com/problems/climbing-stairs</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>假设你正在爬楼梯。需要 n 阶你才能到达楼顶。</p><p>每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？</p><p>注意：给定 n 是一个正整数。</p><p>示例 1：</p><pre><code>输入： 2输出： 2解释： 有两种方法可以爬到楼顶。1.  1 阶 + 1 阶2.  2 阶</code></pre><p>示例 2：</p><pre><code>输入： 3输出： 3解释： 有三种方法可以爬到楼顶。1.  1 阶 + 1 阶 + 1 阶2.  1 阶 + 2 阶3.  2 阶 + 1 阶</code></pre><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>算是一个递归方法，如果只有一阶那么只有一种方法，二阶有两种方法。<br>递归方程<br>    f(n)=f(n-1)+f(n-2)</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public int climbStairs(int n) &#123;</span><br><span class="line">  if (n &lt; 3) &#123;</span><br><span class="line">    return n;</span><br><span class="line">  &#125;</span><br><span class="line">  int f1 = 1;</span><br><span class="line">  int f2 = 2;</span><br><span class="line">  int fn = 0;</span><br><span class="line">  for (int i = 3; i &lt;= n; i++) &#123;</span><br><span class="line">    fn = f1 + f2;</span><br><span class="line">    f1 = f2;</span><br><span class="line">    f2 = fn;</span><br><span class="line">  &#125;</span><br><span class="line">  return fn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;70-Climbing-Stairs（两数之和）&quot;&gt;&lt;a href=&quot;#70-Climbing-Stairs（两数之和）&quot; class=&quot;headerlink&quot; title=&quot;70. Climbing Stairs（两数之和）&quot;&gt;&lt;/a&gt;70. Climbing 
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://cheng102e.github.io/categories/LeetCode/"/>
    
    
  </entry>
  
  <entry>
    <title>LeetCode 628. Maximum Product of Three Numbers</title>
    <link href="https://cheng102e.github.io/LeetCode%20628.%20Maximum%20Product%20of%20Three%20Numbers.html"/>
    <id>https://cheng102e.github.io/LeetCode 628. Maximum Product of Three Numbers.html</id>
    <published>2019-12-28T10:05:00.000Z</published>
    <updated>2019-12-28T11:13:33.356Z</updated>
    
    <content type="html"><![CDATA[<h2 id="628-Maximum-Product-of-Three-Numbers（三个数的最大乘积）"><a href="#628-Maximum-Product-of-Three-Numbers（三个数的最大乘积）" class="headerlink" title="628. Maximum Product of Three Numbers（三个数的最大乘积）"></a>628. Maximum Product of Three Numbers（三个数的最大乘积）</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://leetcode-cn.com/problems/maximum-product-of-three-numbers/submissions" target="_blank" rel="noopener">https://leetcode-cn.com/problems/maximum-product-of-three-numbers/submissions</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>给定一个整型数组，在数组中找出由三个数组成的最大乘积，并输出这个乘积。</p><p>示例 1:</p><p>  输入: [1,2,3]<br>  输出: 6<br>示例 2:</p><p>  输入: [1,2,3,4]<br>  输出: 24<br>注意:</p><p>给定的整型数组长度范围是[3,104]，数组中所有的元素范围是[-1000, 1000]。<br>输入的数组中任意三个数的乘积不会超出32位有符号整数的范围。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>简单题，分析一下思路，要求乘积的最大值，那么限定一下范围，只能是三个最大正数相乘，或者两个最小负数相乘再乘最大正数，负负得正。这里采用sort直接排序，偷了个懒，之后算出两种最大值比较输出即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public static int maximumProduct(int[] nums) &#123;</span><br><span class="line">  Arrays.sort(nums);</span><br><span class="line">  int max1 = nums[0] * nums[1] * nums[nums.length - 1];</span><br><span class="line">  int max2 = nums[nums.length - 3] * nums[nums.length - 2] * nums[nums.length - 1];</span><br><span class="line"></span><br><span class="line">  return Math.max(max1, max2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;628-Maximum-Product-of-Three-Numbers（三个数的最大乘积）&quot;&gt;&lt;a href=&quot;#628-Maximum-Product-of-Three-Numbers（三个数的最大乘积）&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://cheng102e.github.io/categories/LeetCode/"/>
    
    
  </entry>
  
  <entry>
    <title>LeetCode 13. Roman to Integer</title>
    <link href="https://cheng102e.github.io/LeetCode%2013.%20Roman%20to%20Integer.html"/>
    <id>https://cheng102e.github.io/LeetCode 13. Roman to Integer.html</id>
    <published>2019-12-27T09:39:00.000Z</published>
    <updated>2019-12-28T11:08:40.503Z</updated>
    
    <content type="html"><![CDATA[<h2 id="13-Roman-to-Integer（罗马数字转整数）"><a href="#13-Roman-to-Integer（罗马数字转整数）" class="headerlink" title="13. Roman to Integer（罗马数字转整数）"></a>13. Roman to Integer（罗马数字转整数）</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://leetcode-cn.com/problems/roman-to-integer/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/roman-to-integer/</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。</p><pre><code>字符          数值I             1V             5X             10L             50C             100D             500M             1000</code></pre><p>例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：</p><p>I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。<br>X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。<br>C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。<br>给定一个罗马数字，将其转换成整数。输入确保在 1 到 3999 的范围内。</p><p>示例 1:</p><pre><code>输入: &quot;III&quot;输出: 3</code></pre><p>示例 2:</p><pre><code>输入: &quot;IV&quot;输出: 4</code></pre><p>示例 3:</p><pre><code>输入: &quot;IX&quot;输出: 9</code></pre><p>示例 4:</p><pre><code>输入: &quot;LVIII&quot;输出: 58解释: L = 50, V= 5, III = 3.</code></pre><p>示例 5:</p><pre><code>输入: &quot;MCMXCIV&quot;输出: 1994解释: M = 1000, CM = 900, XC = 90, IV = 4.</code></pre><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这题比起之前的整数转罗马数字麻烦了很多，整数转罗马只需要考虑去除差即可，现在需要反向转换，首先可以先从头到尾把全部转化为整数，之后如果发现IV等的组合，就减去两倍的I，别的几个同理，得到正确答案。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public static int romanToInt(String s) &#123;</span><br><span class="line">    int len = s.length();</span><br><span class="line">    int num = 0;</span><br><span class="line">    for (int i = 0; i &lt; len; i++) &#123;</span><br><span class="line">      switch (s.charAt(i)) &#123;</span><br><span class="line">        case &apos;I&apos;:</span><br><span class="line">          num += 1;</span><br><span class="line">          break;</span><br><span class="line">        case &apos;V&apos;:</span><br><span class="line">          num += 5;</span><br><span class="line">          break;</span><br><span class="line">        case &apos;X&apos;:</span><br><span class="line">          num += 10;</span><br><span class="line">          break;</span><br><span class="line">        case &apos;L&apos;:</span><br><span class="line">          num += 50;</span><br><span class="line">          break;</span><br><span class="line">        case &apos;C&apos;:</span><br><span class="line">          num += 100;</span><br><span class="line">          break;</span><br><span class="line">        case &apos;D&apos;:</span><br><span class="line">          num += 500;</span><br><span class="line">          break;</span><br><span class="line">        case &apos;M&apos;:</span><br><span class="line">          num += 1000;</span><br><span class="line">          break;</span><br><span class="line">        default:</span><br><span class="line">          System.out.println(&quot;default&quot;);</span><br><span class="line">          break;</span><br><span class="line">      &#125;</span><br><span class="line">      if (i != 0) &#123;</span><br><span class="line">        if (s.charAt(i - 1) == &apos;I&apos;) &#123;</span><br><span class="line">          if (s.charAt(i) == &apos;V&apos; || s.charAt(i) == &apos;X&apos;) &#123;</span><br><span class="line">            num -= 2;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (s.charAt(i - 1) == &apos;X&apos;) &#123;</span><br><span class="line">          if (s.charAt(i) == &apos;L&apos; || s.charAt(i) == &apos;C&apos;) &#123;</span><br><span class="line">            num -= 20;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (s.charAt(i - 1) == &apos;C&apos;) &#123;</span><br><span class="line">          if (s.charAt(i) == &apos;D&apos; || s.charAt(i) == &apos;M&apos;) &#123;</span><br><span class="line">            num -= 200;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return num;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;13-Roman-to-Integer（罗马数字转整数）&quot;&gt;&lt;a href=&quot;#13-Roman-to-Integer（罗马数字转整数）&quot; class=&quot;headerlink&quot; title=&quot;13. Roman to Integer（罗马数字转整数）&quot;&gt;&lt;/a&gt;1
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://cheng102e.github.io/categories/LeetCode/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 2016-04-2 俄罗斯方块</title>
    <link href="https://cheng102e.github.io/CCF%202016-04-2%20%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97.html"/>
    <id>https://cheng102e.github.io/CCF 2016-04-2 俄罗斯方块.html</id>
    <published>2019-09-05T07:57:00.000Z</published>
    <updated>2019-09-05T08:45:38.575Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-2016-04-2-俄罗斯方块"><a href="#CCF-2016-04-2-俄罗斯方块" class="headerlink" title="CCF 2016-04-2 俄罗斯方块"></a>CCF 2016-04-2 俄罗斯方块</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　　俄罗斯方块是俄罗斯人阿列克谢·帕基特诺夫发明的一款休闲游戏。<br>　　游戏在一个15行10列的方格图上进行，方格图上的每一个格子可能已经放置了方块，或者没有放置方块。每一轮，都会有一个新的由4个小方块组成的板块从方格图的上方落下，玩家可以操作板块左右移动放到合适的位置，当板块中某一个方块的下边缘与方格图上的方块上边缘重合或者达到下边界时，板块不再移动，如果此时方格图的某一行全放满了方块，则该行被消除并得分。<br>　　在这个问题中，你需要写一个程序来模拟板块下落，你不需要处理玩家的操作，也不需要处理消行和得分。<br>　　具体的，给定一个初始的方格图，以及一个板块的形状和它下落的初始位置，你要给出最终的方格图。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>　　　输入的前15行包含初始的方格图，每行包含10个数字，相邻的数字用空格分隔。如果一个数字是0，表示对应的方格中没有方块，如果数字是1，则表示初始的时候有方块。输入保证前4行中的数字都是0。<br>　　输入的第16至第19行包含新加入的板块的形状，每行包含4个数字，组成了板块图案，同样0表示没方块，1表示有方块。输入保证板块的图案中正好包含4个方块，且4个方块是连在一起的（准确的说，4个方块是四连通的，即给定的板块是俄罗斯方块的标准板块）。<br>　　第20行包含一个1到7之间的整数，表示板块图案最左边开始的时候是在方格图的哪一列中。注意，这里的板块图案指的是16至19行所输入的板块图案，如果板块图案的最左边一列全是0，则它的左边和实际所表示的板块的左边是不一致的（见样例）</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>　输出15行，每行10个数字，相邻的数字之间用一个空格分隔，表示板块下落后的方格图。注意，你不需要处理最终的消行。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>0 0 0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 00 0 0 0 0 0 0 1 0 00 0 0 0 0 0 1 0 0 00 0 0 0 0 0 1 0 0 01 1 1 0 0 0 1 1 1 10 0 0 0 1 0 0 0 0 00 0 0 00 1 1 10 0 0 10 0 0 03</code></pre><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 1 0 0</span><br><span class="line">0 0 0 0 0 0 1 0 0 0</span><br><span class="line">0 0 0 0 0 0 1 0 0 0</span><br><span class="line">1 1 1 1 1 1 1 1 1 1</span><br><span class="line">0 0 0 0 1 1 0 0 0 0</span><br></pre></td></tr></table></figure><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>以前的代码，暴力向下计算即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,i,k,j,t,x;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">20</span>][<span class="number">11</span>],b[<span class="number">4</span>][<span class="number">4</span>],c[<span class="number">20</span>][<span class="number">11</span>];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">15</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">10</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i][j];</span><br><span class="line">c[i][j]=a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">16</span>;i&lt;=<span class="number">19</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">10</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">a[i][j]=<span class="number">1</span>;</span><br><span class="line">c[i][j]=a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;b[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line"><span class="keyword">int</span> po=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">19</span>&amp;&amp;po;i++)</span><br><span class="line">&#123;</span><br><span class="line">po=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">4</span>;j&gt;=<span class="number">1</span>&amp;&amp;po&amp;&amp;i+j<span class="number">-4</span>&gt;=<span class="number">1</span>;j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(x=<span class="number">1</span>;x&lt;=<span class="number">4</span>&amp;&amp;po;x++)</span><br><span class="line">&#123;</span><br><span class="line">c[i+j<span class="number">-4</span>][k+x<span class="number">-1</span>]=a[i+j<span class="number">-4</span>][k+x<span class="number">-1</span>]+b[j][x];</span><br><span class="line"><span class="keyword">if</span>(c[i+j<span class="number">-4</span>][k+x<span class="number">-1</span>]&gt;<span class="number">1</span>)</span><br><span class="line">po=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">i=i<span class="number">-2</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">4</span>;j&gt;=<span class="number">1</span>;j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(x=<span class="number">1</span>;x&lt;=<span class="number">4</span>;x++)</span><br><span class="line">&#123;</span><br><span class="line">a[i+j<span class="number">-4</span>][k+x<span class="number">-1</span>]=a[i+j<span class="number">-4</span>][k+x<span class="number">-1</span>]+b[j][x];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">15</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">10</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[i][j];</span><br><span class="line"><span class="keyword">if</span>(j!=<span class="number">10</span>)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i!=<span class="number">15</span>)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-2016-04-2-俄罗斯方块&quot;&gt;&lt;a href=&quot;#CCF-2016-04-2-俄罗斯方块&quot; class=&quot;headerlink&quot; title=&quot;CCF 2016-04-2 俄罗斯方块&quot;&gt;&lt;/a&gt;CCF 2016-04-2 俄罗斯方块&lt;/h2&gt;&lt;h3 i
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 2016-04-1 折点计数</title>
    <link href="https://cheng102e.github.io/CCF%202016-04-1%20%E6%8A%98%E7%82%B9%E8%AE%A1%E6%95%B0.html"/>
    <id>https://cheng102e.github.io/CCF 2016-04-1 折点计数.html</id>
    <published>2019-09-05T07:56:00.000Z</published>
    <updated>2019-09-05T08:45:38.935Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-2016-04-1-折点计数"><a href="#CCF-2016-04-1-折点计数" class="headerlink" title="CCF 2016-04-1 折点计数"></a>CCF 2016-04-1 折点计数</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　　给定<em>n</em>个整数表示一个商店连续<em>n</em>天的销售量。如果某天之前销售量在增长，而后一天销售量减少，则称这一天为折点，反过来如果之前销售量减少而后一天销售量增长，也称这一天为折点。其他的天都不是折点。如下图中，第3天和第6天是折点。<br><img src="http://118.190.20.162/RequireFile.do?fid=gbLRbhR7" alt="img"><br>　　给定<em>n</em>个整数<em>a</em>1, <em>a</em>2, …, <em>an<em>表示销售量，请计算出这些天总共有多少个折点。<br>　　为了减少歧义，我们给定的数据保证：在这</em>n<em>天中相邻两天的销售量总是不同的，即</em>ai</em>-1≠<em>ai</em>。注意，如果两天不相邻，销售量可能相同。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>​        输入的第一行包含一个整数<em>n</em>。<br>　　第二行包含<em>n</em>个整数，用空格分隔，分别表示<em>a</em>1, <em>a</em>2, …, <em>an</em>。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>​        输出一个整数，表示折点出现的数量。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>75 4 1 2 3 6 4</code></pre><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h4><p>　　所有评测用例满足：1 ≤ <em>n</em> ≤ 1000，每天的销售量是不超过10000的非负整数。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>遍历一遍，满足条件加一。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> a[n],i,t=<span class="number">0</span>,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((a[i]&gt;a[i<span class="number">-1</span>])&amp;&amp;(a[i]&gt;a[i+<span class="number">1</span>]))</span><br><span class="line">t++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>((a[i]&lt;a[i<span class="number">-1</span>])&amp;&amp;(a[i]&lt;a[i+<span class="number">1</span>]))</span><br><span class="line">t++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;t;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-2016-04-1-折点计数&quot;&gt;&lt;a href=&quot;#CCF-2016-04-1-折点计数&quot; class=&quot;headerlink&quot; title=&quot;CCF 2016-04-1 折点计数&quot;&gt;&lt;/a&gt;CCF 2016-04-1 折点计数&lt;/h2&gt;&lt;h3 id=&quot;题
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1927 防护伞</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1927%20%E9%98%B2%E6%8A%A4%E4%BC%9E.html"/>
    <id>https://cheng102e.github.io/洛谷 P1927 防护伞.html</id>
    <published>2019-09-03T12:28:00.000Z</published>
    <updated>2019-09-05T08:45:40.487Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1927-防护伞"><a href="#洛谷-P1927-防护伞" class="headerlink" title="洛谷 P1927 防护伞"></a>洛谷 P1927 防护伞</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1927" target="_blank" rel="noopener">https://www.luogu.org/problem/P1927</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>据说 2012 的灾难和太阳黑子的爆发有关。于是地球防卫小队决定制造一个特殊防护 伞，挡住太阳黑子爆发的区域，减少其对地球的影响。由于太阳相对于地球来说实在是太 大了，我们可以把太阳表面看作一个平面，中心定为(0,0)。根据情报，在 2012 年时， 太阳表面上会产生 N 个黑子区域，每个黑子视为一个点。特殊防护伞可以看作一个巨大 的圆面，现在地球防卫小队决定将它的中心定位于某个黑子，然后用伞面挡住其他黑子。 因为制造防护伞的材料成本特别高，所以我们希望伞面尽可能的小。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行：一个整数 N，表示黑子个数。</p><p>第 2 到 N-1 行：每行两个整数，表示黑子的坐标（x, y）。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>第一行：一个实数，表示伞的面积。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">0  1 </span><br><span class="line">-8  -4 </span><br><span class="line">-1  4</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">279.6017</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>【数据范围】</p><p>对于 50%的数据： 2≤N≤100。</p><p>对于 100%的数据： 2≤N≤1000。</p><p>-10000≤x,y≤10000。</p><p>【注意】</p><p>精确到小数点后 4 位</p><p>π=3.1415926535</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>水题，遍历一下找到两点间的最远距离，直接公式算结果，控制输出位数即可。</p><p>寻找逆序对的话，排序就行，这里的数据量肯定不能冒泡，所以归并（方便统计数量），归并排序的算法不是很难，以后我会补个排序算法集合（鸽德），这里只需要注意两点，一点是sum每次增加mid-left+1，这个1可能会漏；第二点是数据范围，数组要50w的，答案要longlong。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> x[n],y[n];</span><br><span class="line"><span class="keyword">double</span> len[n][n],minlen[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;x[i]&gt;&gt;y[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">&#123;</span><br><span class="line">len[i][j]=<span class="built_in">sqrt</span>(<span class="built_in">pow</span>(x[i]-x[j],<span class="number">2</span>)+<span class="built_in">pow</span>(y[i]-y[j],<span class="number">2</span>));</span><br><span class="line">        minlen[i]=max(minlen[i],len[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> min=<span class="number">30000</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(minlen[i]&lt;min)</span><br><span class="line">min=minlen[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> ans=min*min*<span class="number">3.1415926535</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(<span class="number">4</span>)&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1927-防护伞&quot;&gt;&lt;a href=&quot;#洛谷-P1927-防护伞&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1927 防护伞&quot;&gt;&lt;/a&gt;洛谷 P1927 防护伞&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1843 奶牛晒衣服</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1843%20%E5%A5%B6%E7%89%9B%E6%99%92%E8%A1%A3%E6%9C%8D.html"/>
    <id>https://cheng102e.github.io/洛谷 P1843 奶牛晒衣服.html</id>
    <published>2019-09-02T01:43:00.000Z</published>
    <updated>2019-09-02T01:47:05.929Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1843-奶牛晒衣服"><a href="#洛谷-P1843-奶牛晒衣服" class="headerlink" title="洛谷 P1843 奶牛晒衣服"></a>洛谷 P1843 奶牛晒衣服</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1843" target="_blank" rel="noopener">https://www.luogu.org/problem/P1843</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h4><p>熊大妈决定给每个牛宝宝都穿上可爱的婴儿装 。 于是 ， 为牛宝宝洗晒衣服就成了很不爽的事情。</p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>熊大妈请你帮助完成这个重任 。 洗完衣服后 ， 你就要弄干衣服 。 衣服在自然条件下用 1 的时间可以晒干 A 点湿度 。 抠门的熊大妈买了 1 台烘衣机 。使用烘衣机可以让你用 1 的时间使 1 件衣服除了自然晒干 A 点湿度外，还可以烘干 B 点湿度，但在 1 的时间内只能对 1 件衣服使用。N 件衣服因为种种原因而不一样湿 ， 现在告诉你每件衣服的湿度 ， 要你求出弄干所有衣服的最少时间（湿度为 0 为干 ） 。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行 N ， A ， B ；接下来 N 行，每行一个数，表示衣服的湿度（ 1 ≤ 湿度， A ， B ≤ 500000 ， 1 ≤ N ≤ 500000 ） 。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一行，弄干所有衣服的最少时间。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 2 1</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>第 1 个时间内，用机器处理第 3 件衣服，此外，所有衣服自然晒干 。 花费 1 时间全部弄干。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>每次都用贪心就行了，每天烘干水分最大的衣服，就能最短时间结束。数据较长，借助优先队列排序即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,a,b;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">priority_queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> water;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;water;</span><br><span class="line">q.push(water);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(q.top()&gt;ans*a)</span><br><span class="line">&#123;</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">int</span> max = q.top();</span><br><span class="line">q.pop();</span><br><span class="line">q.push(max-b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1843-奶牛晒衣服&quot;&gt;&lt;a href=&quot;#洛谷-P1843-奶牛晒衣服&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1843 奶牛晒衣服&quot;&gt;&lt;/a&gt;洛谷 P1843 奶牛晒衣服&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot;
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1702 突击考试</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1702%20%E7%AA%81%E5%87%BB%E8%80%83%E8%AF%95.html"/>
    <id>https://cheng102e.github.io/洛谷 P1702 突击考试.html</id>
    <published>2019-08-30T02:08:00.000Z</published>
    <updated>2019-08-30T02:10:29.130Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1702-突击考试"><a href="#洛谷-P1702-突击考试" class="headerlink" title="洛谷 P1702 突击考试"></a>洛谷 P1702 突击考试</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1702" target="_blank" rel="noopener">https://www.luogu.org/problem/P1702</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>一日，老师决定进行一次突击考试。已知每个学生都有一个考试能力等级，教室里一共有N个课桌，按照顺序排成一列，每张课桌可以坐两个人，第i张课桌坐的两个人的能力等级为（A[i],B[i]）。现在老师决定对能力等级为K的人进行测验。他会从这N排中选择连续的L排进行测验，要求这 L排中的每一排至少有一个人考试能力等级为K。现在我们想知道L的最大值以及对应的等级K。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第1行：一个整数N；</p><p>第2..N+1行：每行两个整数，表示A[i],B[i]。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>两个整数L和K，要求在L最大的条件下K最小。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">3 5</span><br><span class="line">4 5</span><br><span class="line">1 3</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 5</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>1≤N≤100,000，1≤A[i],B[i]≤5</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>k的范围很小，直接采用循环做，1-5跑五遍循环就行了。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> a[n],b[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i]&gt;&gt;b[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">5</span>;k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==k || b[i]==k)</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(num&gt;max)</span><br><span class="line">&#123;</span><br><span class="line">max=num;</span><br><span class="line">ans=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;max&lt;&lt;<span class="string">" "</span>&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1702-突击考试&quot;&gt;&lt;a href=&quot;#洛谷-P1702-突击考试&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1702 突击考试&quot;&gt;&lt;/a&gt;洛谷 P1702 突击考试&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; cla
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 2016-09-2 火车购票</title>
    <link href="https://cheng102e.github.io/CCF%202016-09-2%20%E7%81%AB%E8%BD%A6%E8%B4%AD%E7%A5%A8.html"/>
    <id>https://cheng102e.github.io/CCF 2016-09-2 火车购票.html</id>
    <published>2019-08-28T01:28:00.000Z</published>
    <updated>2019-08-28T02:15:07.055Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-2016-09-2-火车购票"><a href="#CCF-2016-09-2-火车购票" class="headerlink" title="CCF 2016-09-2 火车购票"></a>CCF 2016-09-2 火车购票</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　　请实现一个铁路购票系统的简单座位分配算法，来处理一节车厢的座位分配。<br>　　假设一节车厢有20排、每一排5个座位。为方便起见，我们用1到100来给所有的座位编号，第一排是1到5号，第二排是6到10号，依次类推，第20排是96到100号。<br>　　购票时，一个人可能购一张或多张票，最多不超过5张。如果这几张票可以安排在同一排编号相邻的座位，则应该安排在编号最小的相邻座位。否则应该安排在编号最小的几个空座位中（不考虑是否相邻）。<br>　　假设初始时车票全部未被购买，现在给了一些购票指令，请你处理这些指令。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>　　　输入的第一行包含一个整数<em>n</em>，表示购票指令的数量。<br>　　第二行包含<em>n</em>个整数，每个整数<em>p</em>在1到5之间，表示要购入的票数，相邻的两个数之间使用一个空格分隔。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>​        输出<em>n</em>行，每行对应一条指令的处理结果。<br>　　对于购票指令<em>p</em>，输出<em>p</em>张车票的编号，按从小到大排序。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>42 5 4 2</code></pre><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br><span class="line">6 7 8 9 10</span><br><span class="line">11 12 13 14</span><br><span class="line">3 4</span><br></pre></td></tr></table></figure><h4 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h4><p>　　　1) 购2张票，得到座位1、2。<br>　　2) 购5张票，得到座位6至10。<br>　　3) 购4张票，得到座位11至14。<br>　　4) 购2张票，得到座位3、4。</p><h4 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h4><p>　　对于所有评测用例，1 ≤ <em>n</em> ≤ 100，所有购票数量之和不超过100。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>设置数组大一格，存放其中的空位，找到合适的行，然后在其中输出结果即可。</p><p>其实我的代码有问题，那格应该增加一个判断，判断连续空格的，但是，我不想写了，数据难度小，就这样了，以上。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">21</span>][<span class="number">7</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,buy[<span class="number">101</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">a[i][j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">a[i][<span class="number">5</span>]=<span class="number">5</span>;</span><br><span class="line"><span class="comment">//应该放连续空格数的 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;buy[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> tip=<span class="number">0</span>;tip&lt;n;tip++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> order=buy[tip];</span><br><span class="line"><span class="keyword">int</span> line=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> pos=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(line!=<span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[line][<span class="number">5</span>]&gt;=order)</span><br><span class="line">&#123;</span><br><span class="line">pos=line;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">line++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(pos==<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i][j]==<span class="number">0</span>&amp;&amp;order&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[i][j]=<span class="number">1</span>;</span><br><span class="line">a[i][<span class="number">5</span>]--;</span><br><span class="line">order--;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">5</span>*i+j+<span class="number">1</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">a[pos][<span class="number">5</span>]-=order;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[pos][i]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line"><span class="keyword">if</span>(num==order)</span><br><span class="line">&#123;</span><br><span class="line">t=i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">t=t-order+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;order;i++)</span><br><span class="line">&#123;</span><br><span class="line">a[pos][t+i]=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">5</span>*pos+t+i+<span class="number">1</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*for(int i=0;i&lt;20;i++)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">for(int j=0;j&lt;6;j++)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">cout&lt;&lt;a[i][j];</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">cout&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-2016-09-2-火车购票&quot;&gt;&lt;a href=&quot;#CCF-2016-09-2-火车购票&quot; class=&quot;headerlink&quot; title=&quot;CCF 2016-09-2 火车购票&quot;&gt;&lt;/a&gt;CCF 2016-09-2 火车购票&lt;/h2&gt;&lt;h3 id=&quot;题
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 2016-09-1 最大波动</title>
    <link href="https://cheng102e.github.io/CCF%202016-09-1%20%E6%9C%80%E5%A4%A7%E6%B3%A2%E5%8A%A8.html"/>
    <id>https://cheng102e.github.io/CCF 2016-09-1 最大波动.html</id>
    <published>2019-08-27T01:28:00.000Z</published>
    <updated>2019-09-02T03:14:03.032Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-2016-09-1-最大波动"><a href="#CCF-2016-09-1-最大波动" class="headerlink" title="CCF 2016-09-1 最大波动"></a>CCF 2016-09-1 最大波动</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　　小明正在利用股票的波动程度来研究股票。小明拿到了一只股票每天收盘时的价格，他想知道，这只股票连续几天的最大波动值是多少，即在这几天中某天收盘价格与前一天收盘价格之差的绝对值最大是多少。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>　　输入的第一行包含了一个整数<em>n</em>，表示小明拿到的收盘价格的连续天数。<br>　　第二行包含<em>n</em>个正整数，依次表示每天的收盘价格。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>　输出一个整数，表示这只股票这<em>n</em>天中的最大波动值。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>62 5 5 7 3 5</code></pre><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h4 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h4><p>　　第四天和第五天之间的波动最大，波动值为|3-7|=4。</p><h4 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h4><p>　　对于所有评测用例，2 ≤ <em>n</em> ≤ 1000。股票每一天的价格为1到10000之间的整数。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>水题，循环一遍找最大值即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,i,k,max=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">k=<span class="built_in">abs</span>(a[i]-a[i<span class="number">-1</span>]);</span><br><span class="line"><span class="keyword">if</span>(k&gt;max)</span><br><span class="line">&#123;</span><br><span class="line">max=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;max;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-2016-09-1-最大波动&quot;&gt;&lt;a href=&quot;#CCF-2016-09-1-最大波动&quot; class=&quot;headerlink&quot; title=&quot;CCF 2016-09-1 最大波动&quot;&gt;&lt;/a&gt;CCF 2016-09-1 最大波动&lt;/h2&gt;&lt;h3 id=&quot;题
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1318 积水面积</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1318%20%E7%A7%AF%E6%B0%B4%E9%9D%A2%E7%A7%AF.html"/>
    <id>https://cheng102e.github.io/洛谷 P1318 积水面积.html</id>
    <published>2019-08-26T01:35:00.000Z</published>
    <updated>2019-08-26T01:45:01.052Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1318-积水面积"><a href="#洛谷-P1318-积水面积" class="headerlink" title="洛谷 P1318 积水面积"></a>洛谷 P1318 积水面积</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1318" target="_blank" rel="noopener">https://www.luogu.org/problem/P1318</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>一组正整数，分别表示由正方体叠起的柱子的高度。若某高度值为x，表示由x个正立方的方块迭起（如下图，0&lt;=x&lt;=5000）。找出所有可能积水的地方（图中蓝色部分），统计它们可能积水的面积总和（计算的是图中的横截面积。一个立方体的位置，为一个单位面积）。</p><p>如图：柱子高度变化为 0 1 0 2 1 2 0 0 2 0</p><p><img src="https://cdn.luogu.org/upload/pic/117.png" alt="img"></p><p>图中蓝色部分为积水面积，共有6个单位面积积水。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>两行，第一行n,表示有n个数(3&lt;=n&lt;=10000)。第2行连续n个数表示依次由正方体迭起的高度，保证首尾为0。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个数，可能积水的面积。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">0 1 0 2 1 2 0 0 2 0</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>我的思路是左右向中间，从下往上。</p><p>首先输入，找到最大值，之后从1开始循环，这个j是高度的意思，left和right就是左右达到这个高度的最前一个，之后添加数字，直接判断大小就行，到最后一个结束，输出结果。</p><p>（最近心态不好，人很迷茫，估计骚话环节也没了，以上）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> maxn,ans;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">12580</span>];</span><br><span class="line"><span class="keyword">int</span> n,left,right;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n; </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num[i];</span><br><span class="line">        maxn=max(maxn,num[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=maxn;j++)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i]&gt;=j)</span><br><span class="line">&#123; </span><br><span class="line">left=i;</span><br><span class="line">i=n; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">2</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i]&gt;=j)</span><br><span class="line">&#123; </span><br><span class="line">right=i;</span><br><span class="line">i=<span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=left;i&lt;right;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i]&lt;j)</span><br><span class="line">ans++; </span><br><span class="line">&#125;</span><br><span class="line">                </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1318-积水面积&quot;&gt;&lt;a href=&quot;#洛谷-P1318-积水面积&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1318 积水面积&quot;&gt;&lt;/a&gt;洛谷 P1318 积水面积&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; cla
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 2016-12-2 工资计算</title>
    <link href="https://cheng102e.github.io/CCF%202016-12-2%20%E5%B7%A5%E8%B5%84%E8%AE%A1%E7%AE%97.html"/>
    <id>https://cheng102e.github.io/CCF 2016-12-2 工资计算.html</id>
    <published>2019-08-23T03:59:00.000Z</published>
    <updated>2019-08-23T03:30:17.778Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-2016-12-1-工资计算"><a href="#CCF-2016-12-1-工资计算" class="headerlink" title="CCF 2016-12-1 工资计算"></a>CCF 2016-12-1 工资计算</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　　小明的公司每个月给小明发工资，而小明拿到的工资为交完个人所得税之后的工资。假设他一个月的税前工资（扣除五险一金后、未扣税前的工资）为<em>S</em>元，则他应交的个人所得税按如下公式计算：<br>　　1） 个人所得税起征点为3500元，若<em>S</em>不超过3500，则不交税，3500元以上的部分才计算个人所得税，令<em>A</em>=<em>S</em>-3500元；<br>　　2） <em>A</em>中不超过1500元的部分，税率3%；<br>　　3） <em>A</em>中超过1500元未超过4500元的部分，税率10%；<br>　　4） <em>A</em>中超过4500元未超过9000元的部分，税率20%；<br>　　5） <em>A</em>中超过9000元未超过35000元的部分，税率25%；<br>　　6） <em>A</em>中超过35000元未超过55000元的部分，税率30%；<br>　　7） <em>A</em>中超过55000元未超过80000元的部分，税率35%；<br>　　8） <em>A</em>中超过80000元的部分，税率45%；<br>　　例如，如果小明的税前工资为10000元，则<em>A</em>=10000-3500=6500元，其中不超过1500元部分应缴税1500×3%=45元，超过1500元不超过4500元部分应缴税(4500-1500)×10%=300元，超过4500元部分应缴税(6500-4500)×20%=400元。总共缴税745元，税后所得为9255元。<br>　　已知小明这个月税后所得为<em>T</em>元，请问他的税前工资<em>S</em>是多少元。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>　　输入的第一行包含一个整数<em>T</em>，表示小明的税后所得。所有评测数据保证小明的税前工资为一个整百的数。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>　　输出一个整数<em>S</em>，表示小明的税前工资。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>9255</code></pre><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10000</span><br></pre></td></tr></table></figure><h4 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h4><p>　　对于所有评测用例，1 ≤ <em>T</em> ≤ 100000。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>也是一两年前做的了，直接用了之前的代码，将数字关系全部列出来，直接输出，思路应该很清晰，不过代码不咋地。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> s,n,i=<span class="number">34</span>,j,k=<span class="number">1</span>,sum,t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">s=n<span class="number">-3500</span>;</span><br><span class="line"><span class="keyword">if</span>(s&lt;=<span class="number">0</span>)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;n;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s&lt;=<span class="number">1500</span><span class="number">-45</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=s;</span><br><span class="line">t=t*<span class="number">100</span>/<span class="number">97</span>;</span><br><span class="line">sum=<span class="number">3500</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s&lt;=<span class="number">4500</span><span class="number">-300</span><span class="number">-45</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=(s+<span class="number">45</span><span class="number">-1500</span>)*<span class="number">100</span>/<span class="number">90</span>;</span><br><span class="line">sum=<span class="number">3500</span>+<span class="number">1500</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s&lt;=<span class="number">9000</span><span class="number">-900</span><span class="number">-300</span><span class="number">-45</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=(s+<span class="number">45</span>+<span class="number">300</span><span class="number">-4500</span>)*<span class="number">100</span>/<span class="number">80</span>;</span><br><span class="line">sum=<span class="number">3500</span>+<span class="number">4500</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s&lt;=<span class="number">35000</span><span class="number">-6500</span><span class="number">-900</span><span class="number">-300</span><span class="number">-45</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=(s+<span class="number">45</span>+<span class="number">300</span>+<span class="number">900</span><span class="number">-9000</span>)*<span class="number">100</span>/<span class="number">75</span>;</span><br><span class="line">sum=<span class="number">3500</span>+<span class="number">9000</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s&lt;=<span class="number">55000</span><span class="number">-6000</span><span class="number">-6500</span><span class="number">-900</span><span class="number">-300</span><span class="number">-45</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=(s+<span class="number">45</span>+<span class="number">300</span>+<span class="number">900</span>+<span class="number">6500</span><span class="number">-35000</span>)*<span class="number">100</span>/<span class="number">70</span>;</span><br><span class="line">sum=<span class="number">3500</span>+<span class="number">35000</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s&lt;=<span class="number">80000</span><span class="number">-8750</span><span class="number">-6000</span><span class="number">-6500</span><span class="number">-900</span><span class="number">-300</span><span class="number">-45</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=(s+<span class="number">45</span>+<span class="number">300</span>+<span class="number">900</span>+<span class="number">6500</span>+<span class="number">6000</span><span class="number">-55000</span>)*<span class="number">100</span>/<span class="number">65</span>;</span><br><span class="line">sum=<span class="number">3500</span>+<span class="number">55000</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">t=(s+<span class="number">45</span>+<span class="number">300</span>+<span class="number">900</span>+<span class="number">6500</span>+<span class="number">6000</span>+<span class="number">8750</span><span class="number">-80000</span>)*<span class="number">100</span>/<span class="number">55</span>;</span><br><span class="line">sum=<span class="number">3500</span>+<span class="number">80000</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-2016-12-1-工资计算&quot;&gt;&lt;a href=&quot;#CCF-2016-12-1-工资计算&quot; class=&quot;headerlink&quot; title=&quot;CCF 2016-12-1 工资计算&quot;&gt;&lt;/a&gt;CCF 2016-12-1 工资计算&lt;/h2&gt;&lt;h3 id=&quot;题
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 2016-12-1 中间数</title>
    <link href="https://cheng102e.github.io/CCF%202016-12-1%20%E4%B8%AD%E9%97%B4%E6%95%B0.html"/>
    <id>https://cheng102e.github.io/CCF 2016-12-1 中间数.html</id>
    <published>2019-08-23T03:58:00.000Z</published>
    <updated>2019-08-23T03:29:56.936Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-2016-12-1-中间数"><a href="#CCF-2016-12-1-中间数" class="headerlink" title="CCF 2016-12-1 中间数"></a>CCF 2016-12-1 中间数</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　在一个整数序列<em>a</em>1, <em>a</em>2, …, <em>an</em>中，如果存在某个数，大于它的整数数量等于小于它的整数数量，则称其为中间数。在一个序列中，可能存在多个下标不相同的中间数，这些中间数的值是相同的。<br>　　给定一个整数序列，请找出这个整数序列的中间数的值。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>　　输入的第一行包含了一个整数<em>n</em>，表示整数序列中数的个数。<br>　　第二行包含<em>n</em>个正整数，依次表示<em>a</em>1, <em>a</em>2, …, <em>an</em>。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>　　如果约定序列的中间数存在，则输出中间数的值，否则输出-1表示不存在中间数。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>62 6 5 6 3 5</code></pre><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h4 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h4><p>　　比5小的数有2个，比5大的数也有2个。</p><h4 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h4><p>　　对于所有评测用例，1 ≤ <em>n</em> ≤ 1000，1 ≤ <em>ai</em> ≤ 1000。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>水题，先排序，找到中位数，之后查看左右的相同数字，找到left和right，输出结果即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, mid, left, right;</span><br><span class="line">  <span class="keyword">int</span> num[<span class="number">1010</span>];</span><br><span class="line">  </span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num[i];</span><br><span class="line"> </span><br><span class="line">    sort(num, num+n);</span><br><span class="line"> </span><br><span class="line">    mid = n/<span class="number">2</span>;</span><br><span class="line">    left = mid;</span><br><span class="line">    right = n - mid - <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=mid<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span>(num[i] == num[mid])</span><br><span class="line">    &#123;</span><br><span class="line">    left--;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=mid+<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span>(num[i] == num[mid])</span><br><span class="line">    &#123;</span><br><span class="line">    right--;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;            </span><br><span class="line">&#125;</span><br><span class="line">           </span><br><span class="line">    <span class="keyword">if</span>(left == right)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;num[mid];</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"-1"</span>;</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-2016-12-1-中间数&quot;&gt;&lt;a href=&quot;#CCF-2016-12-1-中间数&quot; class=&quot;headerlink&quot; title=&quot;CCF 2016-12-1 中间数&quot;&gt;&lt;/a&gt;CCF 2016-12-1 中间数&lt;/h2&gt;&lt;h3 id=&quot;题目&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1348 Couple number</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1348%20Couple%20number.html"/>
    <id>https://cheng102e.github.io/洛谷 P1348 Couple number.html</id>
    <published>2019-08-21T00:11:00.000Z</published>
    <updated>2019-09-02T03:14:09.206Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1348-Couple-number"><a href="#洛谷-P1348-Couple-number" class="headerlink" title="洛谷 P1348 Couple number"></a>洛谷 P1348 Couple number</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1348" target="_blank" rel="noopener">https://www.luogu.org/problem/P1348</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>任何一个整数N都能表示成另外两个整数a和b的平方差吗？如果能，那么这个数N就叫做Couple number。你的工作就是判断一个数N是不是Couple number。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>仅一行，两个长整型范围内的整数n1和n2，之间用1个空格隔开。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出在n1到n2范围内有多少个Couple number。</p><p>注意：包括n1和n2两个数，且n1&lt;n2，n2 - n1 &lt;= 10 000 000。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 10</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>现在这些都是数学题了咋的，这也是一道代码很简单，但是要考虑的数学题。</p><p>平方差就是（a+b）*（a-b），左右两部分奇偶性相同，所以结果可能为奇数或者为4的倍数，循环判断即可。</p><p>（存在负数情况，所以判断奇数不能用余数为1，要用余数不为0）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,m;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> i=n;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">4</span>==<span class="number">0</span>||i%<span class="number">2</span>!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;num;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1348-Couple-number&quot;&gt;&lt;a href=&quot;#洛谷-P1348-Couple-number&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1348 Couple number&quot;&gt;&lt;/a&gt;洛谷 P1348 Couple numb
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>P1244 青蛙过河</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1244%20%E9%9D%92%E8%9B%99%E8%BF%87%E6%B2%B3.html"/>
    <id>https://cheng102e.github.io/洛谷 P1244 青蛙过河.html</id>
    <published>2019-08-20T08:51:00.000Z</published>
    <updated>2019-08-20T08:55:35.578Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1244-青蛙过河"><a href="#洛谷-P1244-青蛙过河" class="headerlink" title="洛谷 P1244 青蛙过河"></a>洛谷 P1244 青蛙过河</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1244" target="_blank" rel="noopener">https://www.luogu.org/problem/P1244</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>有一条河，左边一个石墩(A区)上有编号为1，2，3，4，…，n的n只青蛙，河中有k个荷叶(C区)，还有h个石墩(D区)，右边有一个石墩(B区)，如下图所示。n只青蛙要过河(从左岸石墩A到右岸石墩B)，规则为：</p><p><img src="https://cdn.luogu.org/upload/pic/76.png" alt="img"></p><p>(1)石墩上可以承受任意多只青蛙，荷叶只能承受一只青蛙(不论大小)；</p><p>(2)青蛙可以：A→B(表示可以从A跳到B，下同)，A→C，A→D，C→B，D→B，D→C，C→D；</p><p>(3)当一个石墩上有多只青蛙时，则上面的青蛙只能跳到比它大1号的青蛙上面。</p><p>你的任务是对于给出的h，k，计算并输出最多能有多少只青蛙可以根据以上规则顺利过河?</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>两个整数h,k</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，表示最多能有多少只青蛙可以根据以上规则顺利过河。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 3</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16</span><br></pre></td></tr></table></figure><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这道题超出了我的想象。。。。。我没怎么看懂，之后看了别人的博客才搞明白，按道理说用动态规划，但是化简之后的式子就是直接h，k组成的，如果没有石墩，那么只有k+1个，每有一个石墩，数量就增加为（k+1）*2^h，就是每多一个石墩就多了一次周转的机会，然后输出结果就行了。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> h,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;h&gt;&gt;k;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> num=k+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;h;i++)</span><br><span class="line">&#123;</span><br><span class="line">num=num*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;num;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1244-青蛙过河&quot;&gt;&lt;a href=&quot;#洛谷-P1244-青蛙过河&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1244 青蛙过河&quot;&gt;&lt;/a&gt;洛谷 P1244 青蛙过河&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; cla
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1908 逆序对</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1908%20%E9%80%86%E5%BA%8F%E5%AF%B9.html"/>
    <id>https://cheng102e.github.io/洛谷 P1908 逆序对.html</id>
    <published>2019-08-16T04:28:00.000Z</published>
    <updated>2019-08-16T04:02:05.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1908-逆序对"><a href="#洛谷-P1908-逆序对" class="headerlink" title="洛谷 P1908 逆序对"></a>洛谷 P1908 逆序对</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1908" target="_blank" rel="noopener">https://www.luogu.org/problem/P1908</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>猫猫TOM和小老鼠JERRY最近又较量上了，但是毕竟都是成年人，他们已经不喜欢再玩那种你追我赶的游戏，现在他们喜欢玩统计。最近，TOM老猫查阅到一个人类称之为“逆序对”的东西，这东西是这样定义的：对于给定的一段正整数序列，逆序对就是序列中ai&gt;aj且i&lt;j的有序对。知道这概念后，他们就比赛谁先算出给定的一段正整数序列中逆序对的数目。<br><strong>Update:数据已加强。</strong></p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行，一个数n，表示序列中有n个数。</p><p>第二行n个数，表示给定的序列。序列中每个数字不超过10^9</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>给定序列中逆序对的数目。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">5 4 2 6 3 1</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>对于25%的数据，0<em>n</em>≤2500</p><p>对于50%的数据，<em>n</em>≤4×10^4。</p><p>对于所有数据，<em>n</em>≤5×10^5</p><p>请使用较快的输入输出</p><p>应该不会n方过50万吧 by chen_zhe</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这题。。。难倒是不难，但是我没注意数据范围，re三次。</p><p>寻找逆序对的话，排序就行，这里的数据量肯定不能冒泡，所以归并（方便统计数量），归并排序的算法不是很难，以后我会补个排序算法集合（鸽德），这里只需要注意两点，一点是sum每次增加mid-left+1，这个1可能会漏；第二点是数据范围，数组要50w的，答案要long long。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,now[<span class="number">500010</span>],next[<span class="number">500010</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l==r)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">merge(l,mid);</span><br><span class="line">merge(mid+<span class="number">1</span>,r);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> left=l,right=mid+<span class="number">1</span>,count=l;</span><br><span class="line"><span class="keyword">while</span>(left&lt;=mid&amp;&amp;right&lt;=r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(now[left]&lt;=now[right])</span><br><span class="line">&#123;</span><br><span class="line">next[count]=now[left];</span><br><span class="line">left++;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">next[count]=now[right];</span><br><span class="line">count++;</span><br><span class="line">right++;</span><br><span class="line">sum+=mid-left+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(left&lt;=mid) </span><br><span class="line">&#123;</span><br><span class="line">next[count]=now[left];</span><br><span class="line">count++;</span><br><span class="line">left++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(right&lt;=r) </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">next[count]=now[right];</span><br><span class="line">right++;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">&#123;</span><br><span class="line">now[i]=next[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;now[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">merge(<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1908-逆序对&quot;&gt;&lt;a href=&quot;#洛谷-P1908-逆序对&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1908 逆序对&quot;&gt;&lt;/a&gt;洛谷 P1908 逆序对&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1192 台阶问题</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1192%20%E5%8F%B0%E9%98%B6%E9%97%AE%E9%A2%98.html"/>
    <id>https://cheng102e.github.io/洛谷 P1192 台阶问题.html</id>
    <published>2019-08-15T00:38:00.000Z</published>
    <updated>2019-08-15T00:52:53.797Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1192-台阶问题"><a href="#洛谷-P1192-台阶问题" class="headerlink" title="洛谷 P1192 台阶问题"></a>洛谷 P1192 台阶问题</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1092" target="_blank" rel="noopener">https://www.luogu.org/problem/P1092</a></p><br><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>有<em>N</em>级的台阶，你一开始在底部，每次可以向上迈最多<em>K</em>级台阶（最少1级），问到达第<em>N</em>级台阶有多少种不同方式。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>两个正整数N，K。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个正整数，为不同方式数，由于答案可能很大，你需要输出ans  mod 100003后的结果。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 2</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>对于20%的数据,有<em>N</em>≤10,<em>K</em>≤3;</p><p>对于40%的数据，有<em>N</em>≤1000;</p><p>对于100%的数据，有N<em>≤100000,</em>K*≤100。</p><br><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>算法以前是见过的，但是学名我忘了emmmm，不知道算不算动态规划。</p><p>假设要到第3个台阶，最大可以走三阶，我们可以0-1-2-3，也可以0-1-3,0-2-3,0-3，一共有四种方法，第一步到的就是123其中之一：</p><ol><li>如果到1，再到3的方法和0-2的方法一样（2种），之后再走一步</li><li>到2，再到3和0-1的方法一样（1种）</li><li>直接到3，和0-0一样（1种）</li></ol><p>就可以得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f[i] += f[i-j]</span><br></pre></td></tr></table></figure><p>这个式子，之后放到代码中组合，最后得到的f[n]就是我们需要的答案。</p><br><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">100001</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">f[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=k;j++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i&gt;=j)</span><br><span class="line">&#123;</span><br><span class="line">f[i] += f[i-j];</span><br><span class="line">f[i] = f[i]%<span class="number">100003</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;f[n];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1192-台阶问题&quot;&gt;&lt;a href=&quot;#洛谷-P1192-台阶问题&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1192 台阶问题&quot;&gt;&lt;/a&gt;洛谷 P1192 台阶问题&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; cla
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1029 最大公约数和最小公倍数问题</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1029%20%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E5%92%8C%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0%E9%97%AE%E9%A2%98.html"/>
    <id>https://cheng102e.github.io/洛谷 P1029 最大公约数和最小公倍数问题.html</id>
    <published>2019-08-14T00:45:00.000Z</published>
    <updated>2019-08-14T00:57:07.566Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1029-最大公约数和最小公倍数问题"><a href="#洛谷-P1029-最大公约数和最小公倍数问题" class="headerlink" title="洛谷 P1029 最大公约数和最小公倍数问题"></a>洛谷 P1029 最大公约数和最小公倍数问题</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1029" target="_blank" rel="noopener">https://www.luogu.org/problem/P1029</a></p><br><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>输入2个正整数x<em>0,</em>y<em>0(2≤</em>x<em>0&lt;100000,2≤</em>y*0&lt;=1000000),求出满足下列条件的P,Q的个数</p><p>条件:</p><ol><li><em>P</em>,<em>Q</em>是正整数</li><li>要求P<em>,</em>Q*以x0为最大公约数,以y0为最小公倍数.</li></ol><p>试求:满足条件的所有可能的2个正整数的个数.</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>2个正整数x<em>0,</em>y*0</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>1个数，表示求出满足条件的P<em>,</em>Q的个数</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 60</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p><em>P</em>,<em>Q</em>有4种</p><p>1、3,60<br>2、15,12<br>3、12,15<br>4、60,3</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>题目就是输入x，y，一为最小公约数，一为最大公倍数，求存在的pq对数。</p><p>p=x*k1,q=x*k2,y=x*k1*k2,k1k2互质，这就是总结之后的关系，x*y=p*q,将基于这个公式和辗转相除法来计算。</p><p>输入xy，寻找pq乘积为xy的对，之后判断这对pq的最大公约数是不是x，是的话结果就加二（一正一反）。最后，考虑到x=y,比如3,3，若如此，结果加一。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(b!=<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i*i&lt;x*y;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((x*y)%i==<span class="number">0</span> &amp;&amp; gcd(i,(x*y)/i)==x)</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">sum = sum*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(x==y)</span><br><span class="line">sum++;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1029-最大公约数和最小公倍数问题&quot;&gt;&lt;a href=&quot;#洛谷-P1029-最大公约数和最小公倍数问题&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1029 最大公约数和最小公倍数问题&quot;&gt;&lt;/a&gt;洛谷 P1029 最大公约数和最小公倍数
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 2017-03-2 学生排队</title>
    <link href="https://cheng102e.github.io/CCF%202017-03-2%20%E5%AD%A6%E7%94%9F%E6%8E%92%E9%98%9F.html"/>
    <id>https://cheng102e.github.io/CCF 2017-03-2 学生排队.html</id>
    <published>2019-08-13T03:15:00.000Z</published>
    <updated>2019-08-13T03:20:39.289Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-2017-03-2-学生排队"><a href="#CCF-2017-03-2-学生排队" class="headerlink" title="CCF 2017-03-2 学生排队"></a>CCF 2017-03-2 学生排队</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　　体育老师小明要将自己班上的学生按顺序排队。他首先让学生按学号从小到大的顺序排成一排，学号小的排在前面，然后进行多次调整。一次调整小明可能让一位同学出队，向前或者向后移动一段距离后再插入队列。<br>　　例如，下面给出了一组移动的例子，例子中学生的人数为8人。<br>　　0）初始队列中学生的学号依次为1, 2, 3, 4, 5, 6, 7, 8；<br>　　1）第一次调整，命令为“3号同学向后移动2”，表示3号同学出队，向后移动2名同学的距离，再插入到队列中，新队列中学生的学号依次为1, 2, 4, 5, 3, 6, 7, 8；<br>　　2）第二次调整，命令为“8号同学向前移动3”，表示8号同学出队，向前移动3名同学的距离，再插入到队列中，新队列中学生的学号依次为1, 2, 4, 5, 8, 3, 6, 7；<br>　　3）第三次调整，命令为“3号同学向前移动2”，表示3号同学出队，向前移动2名同学的距离，再插入到队列中，新队列中学生的学号依次为1, 2, 4, 3, 5, 8, 6, 7。<br>　　小明记录了所有调整的过程，请问，最终从前向后所有学生的学号依次是多少？<br>　　请特别注意，上述移动过程中所涉及的号码指的是学号，而不是在队伍中的位置。在向后移动时，移动的距离不超过对应同学后面的人数，如果向后移动的距离正好等于对应同学后面的人数则该同学会移动到队列的最后面。在向前移动时，移动的距离不超过对应同学前面的人数，如果向前移动的距离正好等于对应同学前面的人数则该同学会移动到队列的最前面。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>　　　输入的第一行包含一个整数<em>n</em>，表示学生的数量，学生的学号由1到<em>n</em>编号。<br>　　第二行包含一个整数<em>m</em>，表示调整的次数。<br>　　接下来m行，每行两个整数p, q，如果q为正，表示学号为p的同学向后移动q，如果q为负，表示学号为p的同学向前移动-q。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>　　输出一行，包含n个整数，相邻两个整数之间由一个空格分隔，表示最终从前向后所有学生的学号。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">3</span><br><span class="line">3 2</span><br><span class="line">8 -3</span><br><span class="line">3 -2</span><br></pre></td></tr></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 4 3 5 8 6 7</span><br></pre></td></tr></table></figure><h4 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h4><p>　　对于所有评测用例，1 ≤ <em>n</em> ≤ 1000，1 ≤ <em>m</em> ≤ 1000，所有移动均合法。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>也是简单的数字操作题，代码我是大一还是大二敲的，就直接放上来了。用数组存储学生，之后输入，找到该学生的位置，之后数组位移一下即可。用结构体可能会方便一点，但是这个计算量没必要。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,i,k,q,w,j,t,x,s;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">int</span> a[n+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;q&gt;&gt;w;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]==q)</span><br><span class="line">t=j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(w&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">x=a[t];</span><br><span class="line"><span class="keyword">for</span>(s=t;s&lt;t+w;s++)</span><br><span class="line">a[s]=a[s+<span class="number">1</span>];</span><br><span class="line">a[t+w]=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x=a[t];</span><br><span class="line"><span class="keyword">for</span>(s=t;s&gt;t+w;s--)</span><br><span class="line">a[s]=a[s<span class="number">-1</span>];</span><br><span class="line">a[t+w]=x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[i];</span><br><span class="line"><span class="keyword">if</span>(i!=n)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-2017-03-2-学生排队&quot;&gt;&lt;a href=&quot;#CCF-2017-03-2-学生排队&quot; class=&quot;headerlink&quot; title=&quot;CCF 2017-03-2 学生排队&quot;&gt;&lt;/a&gt;CCF 2017-03-2 学生排队&lt;/h2&gt;&lt;h3 id=&quot;题
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
</feed>
