<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cheng102e的博客</title>
  
  <subtitle>缘何不懂，坚持不懈磨砺精炼</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cheng102e.github.io/"/>
  <updated>2019-08-26T01:45:01.052Z</updated>
  <id>https://cheng102e.github.io/</id>
  
  <author>
    <name>cheng102e</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>洛谷 P1318 积水面积</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1318%20%E7%A7%AF%E6%B0%B4%E9%9D%A2%E7%A7%AF.html"/>
    <id>https://cheng102e.github.io/洛谷 P1318 积水面积.html</id>
    <published>2019-08-26T01:35:00.000Z</published>
    <updated>2019-08-26T01:45:01.052Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1318-积水面积"><a href="#洛谷-P1318-积水面积" class="headerlink" title="洛谷 P1318 积水面积"></a>洛谷 P1318 积水面积</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1318" target="_blank" rel="noopener">https://www.luogu.org/problem/P1318</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>一组正整数，分别表示由正方体叠起的柱子的高度。若某高度值为x，表示由x个正立方的方块迭起（如下图，0&lt;=x&lt;=5000）。找出所有可能积水的地方（图中蓝色部分），统计它们可能积水的面积总和（计算的是图中的横截面积。一个立方体的位置，为一个单位面积）。</p><p>如图：柱子高度变化为 0 1 0 2 1 2 0 0 2 0</p><p><img src="https://cdn.luogu.org/upload/pic/117.png" alt="img"></p><p>图中蓝色部分为积水面积，共有6个单位面积积水。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>两行，第一行n,表示有n个数(3&lt;=n&lt;=10000)。第2行连续n个数表示依次由正方体迭起的高度，保证首尾为0。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个数，可能积水的面积。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">0 1 0 2 1 2 0 0 2 0</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>我的思路是左右向中间，从下往上。</p><p>首先输入，找到最大值，之后从1开始循环，这个j是高度的意思，left和right就是左右达到这个高度的最前一个，之后添加数字，直接判断大小就行，到最后一个结束，输出结果。</p><p>（最近心态不好，人很迷茫，估计骚话环节也没了，以上）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> maxn,ans;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">12580</span>];</span><br><span class="line"><span class="keyword">int</span> n,left,right;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n; </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num[i];</span><br><span class="line">        maxn=max(maxn,num[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=maxn;j++)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i]&gt;=j)</span><br><span class="line">&#123; </span><br><span class="line">left=i;</span><br><span class="line">i=n; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">2</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i]&gt;=j)</span><br><span class="line">&#123; </span><br><span class="line">right=i;</span><br><span class="line">i=<span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=left;i&lt;right;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i]&lt;j)</span><br><span class="line">ans++; </span><br><span class="line">&#125;</span><br><span class="line">                </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1318-积水面积&quot;&gt;&lt;a href=&quot;#洛谷-P1318-积水面积&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1318 积水面积&quot;&gt;&lt;/a&gt;洛谷 P1318 积水面积&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; cla
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 2016-12-2 工资计算</title>
    <link href="https://cheng102e.github.io/CCF%202016-12-2%20%E5%B7%A5%E8%B5%84%E8%AE%A1%E7%AE%97.html"/>
    <id>https://cheng102e.github.io/CCF 2016-12-2 工资计算.html</id>
    <published>2019-08-23T03:59:00.000Z</published>
    <updated>2019-08-23T03:30:17.778Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-2016-12-1-工资计算"><a href="#CCF-2016-12-1-工资计算" class="headerlink" title="CCF 2016-12-1 工资计算"></a>CCF 2016-12-1 工资计算</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　　小明的公司每个月给小明发工资，而小明拿到的工资为交完个人所得税之后的工资。假设他一个月的税前工资（扣除五险一金后、未扣税前的工资）为<em>S</em>元，则他应交的个人所得税按如下公式计算：<br>　　1） 个人所得税起征点为3500元，若<em>S</em>不超过3500，则不交税，3500元以上的部分才计算个人所得税，令<em>A</em>=<em>S</em>-3500元；<br>　　2） <em>A</em>中不超过1500元的部分，税率3%；<br>　　3） <em>A</em>中超过1500元未超过4500元的部分，税率10%；<br>　　4） <em>A</em>中超过4500元未超过9000元的部分，税率20%；<br>　　5） <em>A</em>中超过9000元未超过35000元的部分，税率25%；<br>　　6） <em>A</em>中超过35000元未超过55000元的部分，税率30%；<br>　　7） <em>A</em>中超过55000元未超过80000元的部分，税率35%；<br>　　8） <em>A</em>中超过80000元的部分，税率45%；<br>　　例如，如果小明的税前工资为10000元，则<em>A</em>=10000-3500=6500元，其中不超过1500元部分应缴税1500×3%=45元，超过1500元不超过4500元部分应缴税(4500-1500)×10%=300元，超过4500元部分应缴税(6500-4500)×20%=400元。总共缴税745元，税后所得为9255元。<br>　　已知小明这个月税后所得为<em>T</em>元，请问他的税前工资<em>S</em>是多少元。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>　　输入的第一行包含一个整数<em>T</em>，表示小明的税后所得。所有评测数据保证小明的税前工资为一个整百的数。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>　　输出一个整数<em>S</em>，表示小明的税前工资。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>9255</code></pre><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10000</span><br></pre></td></tr></table></figure><h4 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h4><p>　　对于所有评测用例，1 ≤ <em>T</em> ≤ 100000。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>也是一两年前做的了，直接用了之前的代码，将数字关系全部列出来，直接输出，思路应该很清晰，不过代码不咋地。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> s,n,i=<span class="number">34</span>,j,k=<span class="number">1</span>,sum,t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">s=n<span class="number">-3500</span>;</span><br><span class="line"><span class="keyword">if</span>(s&lt;=<span class="number">0</span>)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;n;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s&lt;=<span class="number">1500</span><span class="number">-45</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=s;</span><br><span class="line">t=t*<span class="number">100</span>/<span class="number">97</span>;</span><br><span class="line">sum=<span class="number">3500</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s&lt;=<span class="number">4500</span><span class="number">-300</span><span class="number">-45</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=(s+<span class="number">45</span><span class="number">-1500</span>)*<span class="number">100</span>/<span class="number">90</span>;</span><br><span class="line">sum=<span class="number">3500</span>+<span class="number">1500</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s&lt;=<span class="number">9000</span><span class="number">-900</span><span class="number">-300</span><span class="number">-45</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=(s+<span class="number">45</span>+<span class="number">300</span><span class="number">-4500</span>)*<span class="number">100</span>/<span class="number">80</span>;</span><br><span class="line">sum=<span class="number">3500</span>+<span class="number">4500</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s&lt;=<span class="number">35000</span><span class="number">-6500</span><span class="number">-900</span><span class="number">-300</span><span class="number">-45</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=(s+<span class="number">45</span>+<span class="number">300</span>+<span class="number">900</span><span class="number">-9000</span>)*<span class="number">100</span>/<span class="number">75</span>;</span><br><span class="line">sum=<span class="number">3500</span>+<span class="number">9000</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s&lt;=<span class="number">55000</span><span class="number">-6000</span><span class="number">-6500</span><span class="number">-900</span><span class="number">-300</span><span class="number">-45</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=(s+<span class="number">45</span>+<span class="number">300</span>+<span class="number">900</span>+<span class="number">6500</span><span class="number">-35000</span>)*<span class="number">100</span>/<span class="number">70</span>;</span><br><span class="line">sum=<span class="number">3500</span>+<span class="number">35000</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s&lt;=<span class="number">80000</span><span class="number">-8750</span><span class="number">-6000</span><span class="number">-6500</span><span class="number">-900</span><span class="number">-300</span><span class="number">-45</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=(s+<span class="number">45</span>+<span class="number">300</span>+<span class="number">900</span>+<span class="number">6500</span>+<span class="number">6000</span><span class="number">-55000</span>)*<span class="number">100</span>/<span class="number">65</span>;</span><br><span class="line">sum=<span class="number">3500</span>+<span class="number">55000</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">t=(s+<span class="number">45</span>+<span class="number">300</span>+<span class="number">900</span>+<span class="number">6500</span>+<span class="number">6000</span>+<span class="number">8750</span><span class="number">-80000</span>)*<span class="number">100</span>/<span class="number">55</span>;</span><br><span class="line">sum=<span class="number">3500</span>+<span class="number">80000</span>+t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-2016-12-1-工资计算&quot;&gt;&lt;a href=&quot;#CCF-2016-12-1-工资计算&quot; class=&quot;headerlink&quot; title=&quot;CCF 2016-12-1 工资计算&quot;&gt;&lt;/a&gt;CCF 2016-12-1 工资计算&lt;/h2&gt;&lt;h3 id=&quot;题
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 2016-12-1 中间数</title>
    <link href="https://cheng102e.github.io/CCF%202016-12-1%20%E4%B8%AD%E9%97%B4%E6%95%B0.html"/>
    <id>https://cheng102e.github.io/CCF 2016-12-1 中间数.html</id>
    <published>2019-08-23T03:58:00.000Z</published>
    <updated>2019-08-23T03:29:56.936Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-2016-12-1-中间数"><a href="#CCF-2016-12-1-中间数" class="headerlink" title="CCF 2016-12-1 中间数"></a>CCF 2016-12-1 中间数</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　在一个整数序列<em>a</em>1, <em>a</em>2, …, <em>an</em>中，如果存在某个数，大于它的整数数量等于小于它的整数数量，则称其为中间数。在一个序列中，可能存在多个下标不相同的中间数，这些中间数的值是相同的。<br>　　给定一个整数序列，请找出这个整数序列的中间数的值。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>　　输入的第一行包含了一个整数<em>n</em>，表示整数序列中数的个数。<br>　　第二行包含<em>n</em>个正整数，依次表示<em>a</em>1, <em>a</em>2, …, <em>an</em>。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>　　如果约定序列的中间数存在，则输出中间数的值，否则输出-1表示不存在中间数。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>62 6 5 6 3 5</code></pre><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h4 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h4><p>　　比5小的数有2个，比5大的数也有2个。</p><h4 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h4><p>　　对于所有评测用例，1 ≤ <em>n</em> ≤ 1000，1 ≤ <em>ai</em> ≤ 1000。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>水题，先排序，找到中位数，之后查看左右的相同数字，找到left和right，输出结果即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, mid, left, right;</span><br><span class="line">  <span class="keyword">int</span> num[<span class="number">1010</span>];</span><br><span class="line">  </span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num[i];</span><br><span class="line"> </span><br><span class="line">    sort(num, num+n);</span><br><span class="line"> </span><br><span class="line">    mid = n/<span class="number">2</span>;</span><br><span class="line">    left = mid;</span><br><span class="line">    right = n - mid - <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=mid<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span>(num[i] == num[mid])</span><br><span class="line">    &#123;</span><br><span class="line">    left--;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=mid+<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span>(num[i] == num[mid])</span><br><span class="line">    &#123;</span><br><span class="line">    right--;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;            </span><br><span class="line">&#125;</span><br><span class="line">           </span><br><span class="line">    <span class="keyword">if</span>(left == right)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;num[mid];</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"-1"</span>;</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-2016-12-1-中间数&quot;&gt;&lt;a href=&quot;#CCF-2016-12-1-中间数&quot; class=&quot;headerlink&quot; title=&quot;CCF 2016-12-1 中间数&quot;&gt;&lt;/a&gt;CCF 2016-12-1 中间数&lt;/h2&gt;&lt;h3 id=&quot;题目&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1348%20Couple%20number.html"/>
    <id>https://cheng102e.github.io/洛谷 P1348 Couple number.html</id>
    <published>2019-08-21T00:18:27.475Z</published>
    <updated>2019-08-21T00:18:27.540Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title: 洛谷 P1348 Couple number</p><p>date: 2019-08-21 08:11:00</p><p>tags: </p><p>categories: 洛谷</p><p>-–</p><h2 id="洛谷-P1348-Couple-number"><a href="#洛谷-P1348-Couple-number" class="headerlink" title="洛谷 P1348 Couple number"></a>洛谷 P1348 Couple number</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1348" target="_blank" rel="noopener">https://www.luogu.org/problem/P1348</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>任何一个整数N都能表示成另外两个整数a和b的平方差吗？如果能，那么这个数N就叫做Couple number。你的工作就是判断一个数N是不是Couple number。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>仅一行，两个长整型范围内的整数n1和n2，之间用1个空格隔开。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出在n1到n2范围内有多少个Couple number。</p><p>注意：包括n1和n2两个数，且n1&lt;n2，n2 - n1 &lt;= 10 000 000。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 10</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>现在这些都是数学题了咋的，这也是一道代码很简单，但是要考虑的数学题。</p><p>平方差就是（a+b）*（a-b），左右两部分奇偶性相同，所以结果可能为奇数或者为4的倍数，循环判断即可。</p><p>（存在负数情况，所以判断奇数不能用余数为1，要用余数不为0）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,m;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> i=n;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">4</span>==<span class="number">0</span>||i%<span class="number">2</span>!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;num;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;title: 洛谷 P1348 Couple number&lt;/p&gt;
&lt;p&gt;date: 2019-08-21 08:11:00&lt;/p&gt;
&lt;p&gt;tags: &lt;/p&gt;
&lt;p&gt;categories: 洛谷&lt;/p&gt;
&lt;p&gt;-–&lt;/p&gt;
&lt;h2 id=&quot;洛谷-P1348-Co
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>P1244 青蛙过河</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1244%20%E9%9D%92%E8%9B%99%E8%BF%87%E6%B2%B3.html"/>
    <id>https://cheng102e.github.io/洛谷 P1244 青蛙过河.html</id>
    <published>2019-08-20T08:51:00.000Z</published>
    <updated>2019-08-20T08:55:35.578Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1244-青蛙过河"><a href="#洛谷-P1244-青蛙过河" class="headerlink" title="洛谷 P1244 青蛙过河"></a>洛谷 P1244 青蛙过河</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1244" target="_blank" rel="noopener">https://www.luogu.org/problem/P1244</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>有一条河，左边一个石墩(A区)上有编号为1，2，3，4，…，n的n只青蛙，河中有k个荷叶(C区)，还有h个石墩(D区)，右边有一个石墩(B区)，如下图所示。n只青蛙要过河(从左岸石墩A到右岸石墩B)，规则为：</p><p><img src="https://cdn.luogu.org/upload/pic/76.png" alt="img"></p><p>(1)石墩上可以承受任意多只青蛙，荷叶只能承受一只青蛙(不论大小)；</p><p>(2)青蛙可以：A→B(表示可以从A跳到B，下同)，A→C，A→D，C→B，D→B，D→C，C→D；</p><p>(3)当一个石墩上有多只青蛙时，则上面的青蛙只能跳到比它大1号的青蛙上面。</p><p>你的任务是对于给出的h，k，计算并输出最多能有多少只青蛙可以根据以上规则顺利过河?</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>两个整数h,k</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，表示最多能有多少只青蛙可以根据以上规则顺利过河。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 3</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16</span><br></pre></td></tr></table></figure><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这道题超出了我的想象。。。。。我没怎么看懂，之后看了别人的博客才搞明白，按道理说用动态规划，但是化简之后的式子就是直接h，k组成的，如果没有石墩，那么只有k+1个，每有一个石墩，数量就增加为（k+1）*2^h，就是每多一个石墩就多了一次周转的机会，然后输出结果就行了。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> h,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;h&gt;&gt;k;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> num=k+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;h;i++)</span><br><span class="line">&#123;</span><br><span class="line">num=num*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;num;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1244-青蛙过河&quot;&gt;&lt;a href=&quot;#洛谷-P1244-青蛙过河&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1244 青蛙过河&quot;&gt;&lt;/a&gt;洛谷 P1244 青蛙过河&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; cla
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1908 逆序对</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1908%20%E9%80%86%E5%BA%8F%E5%AF%B9.html"/>
    <id>https://cheng102e.github.io/洛谷 P1908 逆序对.html</id>
    <published>2019-08-16T04:28:00.000Z</published>
    <updated>2019-08-16T04:02:05.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1908-逆序对"><a href="#洛谷-P1908-逆序对" class="headerlink" title="洛谷 P1908 逆序对"></a>洛谷 P1908 逆序对</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1908" target="_blank" rel="noopener">https://www.luogu.org/problem/P1908</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>猫猫TOM和小老鼠JERRY最近又较量上了，但是毕竟都是成年人，他们已经不喜欢再玩那种你追我赶的游戏，现在他们喜欢玩统计。最近，TOM老猫查阅到一个人类称之为“逆序对”的东西，这东西是这样定义的：对于给定的一段正整数序列，逆序对就是序列中ai&gt;aj且i&lt;j的有序对。知道这概念后，他们就比赛谁先算出给定的一段正整数序列中逆序对的数目。<br><strong>Update:数据已加强。</strong></p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行，一个数n，表示序列中有n个数。</p><p>第二行n个数，表示给定的序列。序列中每个数字不超过10^9</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>给定序列中逆序对的数目。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">5 4 2 6 3 1</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>对于25%的数据，0<em>n</em>≤2500</p><p>对于50%的数据，<em>n</em>≤4×10^4。</p><p>对于所有数据，<em>n</em>≤5×10^5</p><p>请使用较快的输入输出</p><p>应该不会n方过50万吧 by chen_zhe</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这题。。。难倒是不难，但是我没注意数据范围，re三次。</p><p>寻找逆序对的话，排序就行，这里的数据量肯定不能冒泡，所以归并（方便统计数量），归并排序的算法不是很难，以后我会补个排序算法集合（鸽德），这里只需要注意两点，一点是sum每次增加mid-left+1，这个1可能会漏；第二点是数据范围，数组要50w的，答案要long long。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,now[<span class="number">500010</span>],next[<span class="number">500010</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l==r)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">merge(l,mid);</span><br><span class="line">merge(mid+<span class="number">1</span>,r);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> left=l,right=mid+<span class="number">1</span>,count=l;</span><br><span class="line"><span class="keyword">while</span>(left&lt;=mid&amp;&amp;right&lt;=r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(now[left]&lt;=now[right])</span><br><span class="line">&#123;</span><br><span class="line">next[count]=now[left];</span><br><span class="line">left++;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">next[count]=now[right];</span><br><span class="line">count++;</span><br><span class="line">right++;</span><br><span class="line">sum+=mid-left+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(left&lt;=mid) </span><br><span class="line">&#123;</span><br><span class="line">next[count]=now[left];</span><br><span class="line">count++;</span><br><span class="line">left++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(right&lt;=r) </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">next[count]=now[right];</span><br><span class="line">right++;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">&#123;</span><br><span class="line">now[i]=next[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;now[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">merge(<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1908-逆序对&quot;&gt;&lt;a href=&quot;#洛谷-P1908-逆序对&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1908 逆序对&quot;&gt;&lt;/a&gt;洛谷 P1908 逆序对&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1192 台阶问题</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1192%20%E5%8F%B0%E9%98%B6%E9%97%AE%E9%A2%98.html"/>
    <id>https://cheng102e.github.io/洛谷 P1192 台阶问题.html</id>
    <published>2019-08-15T00:38:00.000Z</published>
    <updated>2019-08-15T00:52:53.797Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1192-台阶问题"><a href="#洛谷-P1192-台阶问题" class="headerlink" title="洛谷 P1192 台阶问题"></a>洛谷 P1192 台阶问题</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1092" target="_blank" rel="noopener">https://www.luogu.org/problem/P1092</a></p><br><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>有<em>N</em>级的台阶，你一开始在底部，每次可以向上迈最多<em>K</em>级台阶（最少1级），问到达第<em>N</em>级台阶有多少种不同方式。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>两个正整数N，K。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个正整数，为不同方式数，由于答案可能很大，你需要输出ans  mod 100003后的结果。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 2</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>对于20%的数据,有<em>N</em>≤10,<em>K</em>≤3;</p><p>对于40%的数据，有<em>N</em>≤1000;</p><p>对于100%的数据，有N<em>≤100000,</em>K*≤100。</p><br><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>算法以前是见过的，但是学名我忘了emmmm，不知道算不算动态规划。</p><p>假设要到第3个台阶，最大可以走三阶，我们可以0-1-2-3，也可以0-1-3,0-2-3,0-3，一共有四种方法，第一步到的就是123其中之一：</p><ol><li>如果到1，再到3的方法和0-2的方法一样（2种），之后再走一步</li><li>到2，再到3和0-1的方法一样（1种）</li><li>直接到3，和0-0一样（1种）</li></ol><p>就可以得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f[i] += f[i-j]</span><br></pre></td></tr></table></figure><p>这个式子，之后放到代码中组合，最后得到的f[n]就是我们需要的答案。</p><br><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">100001</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">f[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=k;j++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i&gt;=j)</span><br><span class="line">&#123;</span><br><span class="line">f[i] += f[i-j];</span><br><span class="line">f[i] = f[i]%<span class="number">100003</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;f[n];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1192-台阶问题&quot;&gt;&lt;a href=&quot;#洛谷-P1192-台阶问题&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1192 台阶问题&quot;&gt;&lt;/a&gt;洛谷 P1192 台阶问题&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; cla
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1029 最大公约数和最小公倍数问题</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1029%20%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E5%92%8C%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0%E9%97%AE%E9%A2%98.html"/>
    <id>https://cheng102e.github.io/洛谷 P1029 最大公约数和最小公倍数问题.html</id>
    <published>2019-08-14T00:45:00.000Z</published>
    <updated>2019-08-14T00:57:07.566Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1029-最大公约数和最小公倍数问题"><a href="#洛谷-P1029-最大公约数和最小公倍数问题" class="headerlink" title="洛谷 P1029 最大公约数和最小公倍数问题"></a>洛谷 P1029 最大公约数和最小公倍数问题</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1029" target="_blank" rel="noopener">https://www.luogu.org/problem/P1029</a></p><br><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>输入2个正整数x<em>0,</em>y<em>0(2≤</em>x<em>0&lt;100000,2≤</em>y*0&lt;=1000000),求出满足下列条件的P,Q的个数</p><p>条件:</p><ol><li><em>P</em>,<em>Q</em>是正整数</li><li>要求P<em>,</em>Q*以x0为最大公约数,以y0为最小公倍数.</li></ol><p>试求:满足条件的所有可能的2个正整数的个数.</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>2个正整数x<em>0,</em>y*0</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>1个数，表示求出满足条件的P<em>,</em>Q的个数</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 60</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p><em>P</em>,<em>Q</em>有4种</p><p>1、3,60<br>2、15,12<br>3、12,15<br>4、60,3</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>题目就是输入x，y，一为最小公约数，一为最大公倍数，求存在的pq对数。</p><p>p=x*k1,q=x*k2,y=x*k1*k2,k1k2互质，这就是总结之后的关系，x*y=p*q,将基于这个公式和辗转相除法来计算。</p><p>输入xy，寻找pq乘积为xy的对，之后判断这对pq的最大公约数是不是x，是的话结果就加二（一正一反）。最后，考虑到x=y,比如3,3，若如此，结果加一。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(b!=<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i*i&lt;x*y;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((x*y)%i==<span class="number">0</span> &amp;&amp; gcd(i,(x*y)/i)==x)</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">sum = sum*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(x==y)</span><br><span class="line">sum++;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1029-最大公约数和最小公倍数问题&quot;&gt;&lt;a href=&quot;#洛谷-P1029-最大公约数和最小公倍数问题&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1029 最大公约数和最小公倍数问题&quot;&gt;&lt;/a&gt;洛谷 P1029 最大公约数和最小公倍数
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 2017-03-2 学生排队</title>
    <link href="https://cheng102e.github.io/CCF%202017-03-2%20%E5%AD%A6%E7%94%9F%E6%8E%92%E9%98%9F.html"/>
    <id>https://cheng102e.github.io/CCF 2017-03-2 学生排队.html</id>
    <published>2019-08-13T03:15:00.000Z</published>
    <updated>2019-08-13T03:20:39.289Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-2017-03-2-学生排队"><a href="#CCF-2017-03-2-学生排队" class="headerlink" title="CCF 2017-03-2 学生排队"></a>CCF 2017-03-2 学生排队</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　　体育老师小明要将自己班上的学生按顺序排队。他首先让学生按学号从小到大的顺序排成一排，学号小的排在前面，然后进行多次调整。一次调整小明可能让一位同学出队，向前或者向后移动一段距离后再插入队列。<br>　　例如，下面给出了一组移动的例子，例子中学生的人数为8人。<br>　　0）初始队列中学生的学号依次为1, 2, 3, 4, 5, 6, 7, 8；<br>　　1）第一次调整，命令为“3号同学向后移动2”，表示3号同学出队，向后移动2名同学的距离，再插入到队列中，新队列中学生的学号依次为1, 2, 4, 5, 3, 6, 7, 8；<br>　　2）第二次调整，命令为“8号同学向前移动3”，表示8号同学出队，向前移动3名同学的距离，再插入到队列中，新队列中学生的学号依次为1, 2, 4, 5, 8, 3, 6, 7；<br>　　3）第三次调整，命令为“3号同学向前移动2”，表示3号同学出队，向前移动2名同学的距离，再插入到队列中，新队列中学生的学号依次为1, 2, 4, 3, 5, 8, 6, 7。<br>　　小明记录了所有调整的过程，请问，最终从前向后所有学生的学号依次是多少？<br>　　请特别注意，上述移动过程中所涉及的号码指的是学号，而不是在队伍中的位置。在向后移动时，移动的距离不超过对应同学后面的人数，如果向后移动的距离正好等于对应同学后面的人数则该同学会移动到队列的最后面。在向前移动时，移动的距离不超过对应同学前面的人数，如果向前移动的距离正好等于对应同学前面的人数则该同学会移动到队列的最前面。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>　　　输入的第一行包含一个整数<em>n</em>，表示学生的数量，学生的学号由1到<em>n</em>编号。<br>　　第二行包含一个整数<em>m</em>，表示调整的次数。<br>　　接下来m行，每行两个整数p, q，如果q为正，表示学号为p的同学向后移动q，如果q为负，表示学号为p的同学向前移动-q。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>　　输出一行，包含n个整数，相邻两个整数之间由一个空格分隔，表示最终从前向后所有学生的学号。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">3</span><br><span class="line">3 2</span><br><span class="line">8 -3</span><br><span class="line">3 -2</span><br></pre></td></tr></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 4 3 5 8 6 7</span><br></pre></td></tr></table></figure><h4 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h4><p>　　对于所有评测用例，1 ≤ <em>n</em> ≤ 1000，1 ≤ <em>m</em> ≤ 1000，所有移动均合法。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>也是简单的数字操作题，代码我是大一还是大二敲的，就直接放上来了。用数组存储学生，之后输入，找到该学生的位置，之后数组位移一下即可。用结构体可能会方便一点，但是这个计算量没必要。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,i,k,q,w,j,t,x,s;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">int</span> a[n+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;q&gt;&gt;w;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]==q)</span><br><span class="line">t=j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(w&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">x=a[t];</span><br><span class="line"><span class="keyword">for</span>(s=t;s&lt;t+w;s++)</span><br><span class="line">a[s]=a[s+<span class="number">1</span>];</span><br><span class="line">a[t+w]=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x=a[t];</span><br><span class="line"><span class="keyword">for</span>(s=t;s&gt;t+w;s--)</span><br><span class="line">a[s]=a[s<span class="number">-1</span>];</span><br><span class="line">a[t+w]=x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[i];</span><br><span class="line"><span class="keyword">if</span>(i!=n)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-2017-03-2-学生排队&quot;&gt;&lt;a href=&quot;#CCF-2017-03-2-学生排队&quot; class=&quot;headerlink&quot; title=&quot;CCF 2017-03-2 学生排队&quot;&gt;&lt;/a&gt;CCF 2017-03-2 学生排队&lt;/h2&gt;&lt;h3 id=&quot;题
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 2017-03-1 分蛋糕</title>
    <link href="https://cheng102e.github.io/CCF%202017-03-1%20%E5%88%86%E8%9B%8B%E7%B3%95.html"/>
    <id>https://cheng102e.github.io/CCF 2017-03-1 分蛋糕.html</id>
    <published>2019-08-12T00:58:00.000Z</published>
    <updated>2019-08-12T01:06:22.019Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-2017-03-1-分蛋糕"><a href="#CCF-2017-03-1-分蛋糕" class="headerlink" title="CCF 2017-03-1 分蛋糕"></a>CCF 2017-03-1 分蛋糕</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　小明今天生日，他有<em>n</em>块蛋糕要分给朋友们吃，这<em>n</em>块蛋糕（编号为1到<em>n</em>）的重量分别为<em>a</em>1, <em>a</em>2, …, <em>an</em>。小明想分给每个朋友至少重量为<em>k</em>的蛋糕。小明的朋友们已经排好队准备领蛋糕，对于每个朋友，小明总是先将自己手中编号最小的蛋糕分给他，当这个朋友所分得蛋糕的重量不到<em>k</em>时，再继续将剩下的蛋糕中编号最小的给他，直到小明的蛋糕分完或者这个朋友分到的蛋糕的总重量大于等于<em>k</em>。<br>　　请问当小明的蛋糕分完时，总共有多少个朋友分到了蛋糕。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>　　输入的第一行包含了两个整数<em>n</em>, <em>k</em>，意义如上所述。<br>　　第二行包含<em>n</em>个正整数，依次表示<em>a</em>1, <em>a</em>2, …, <em>an</em>。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>　　输出一个整数，表示有多少个朋友分到了蛋糕。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6 9</span><br><span class="line">2 6 5 6 3 5</span><br></pre></td></tr></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h4><p>　　第一个朋友分到了前3块蛋糕，第二个朋友分到了第4、5块蛋糕，第三个朋友分到了最后一块蛋糕。</p><h4 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h4><p>　　对于所有评测用例，1 ≤ <em>n</em> ≤ 1000，1 ≤ <em>k</em> ≤ 10000，1 ≤ <em>ai</em> ≤ 1000。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>不是难题，甚至可以不用数组，直接在输入的时候进行一步判断，sum代表当个人拿到的蛋糕，num代表人数，最后需要判断一下sum是否为0.</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">sum+=a;</span><br><span class="line"><span class="keyword">if</span>(sum&gt;=k)</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line">sum=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sum&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;num;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-2017-03-1-分蛋糕&quot;&gt;&lt;a href=&quot;#CCF-2017-03-1-分蛋糕&quot; class=&quot;headerlink&quot; title=&quot;CCF 2017-03-1 分蛋糕&quot;&gt;&lt;/a&gt;CCF 2017-03-1 分蛋糕&lt;/h2&gt;&lt;h3 id=&quot;题目&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1049 装箱问题</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1049%20%E8%A3%85%E7%AE%B1%E9%97%AE%E9%A2%98.html"/>
    <id>https://cheng102e.github.io/洛谷 P1049 装箱问题.html</id>
    <published>2019-08-09T04:57:00.000Z</published>
    <updated>2019-08-09T06:18:12.276Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1049-装箱问题"><a href="#洛谷-P1049-装箱问题" class="headerlink" title="洛谷 P1049 装箱问题"></a>洛谷 P1049 装箱问题</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1049" target="_blank" rel="noopener">https://www.luogu.org/problem/P1049</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>有一个箱子容量为V（正整数 0≤<em>V</em>≤20000），同时有n个物品（0&lt;<em>n</em>≤30，每个物品有一个体积（正整数）。</p><p>要求n个物品中，任取若干个装入箱内，使箱子的剩余空间为最小。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>1个整数，表示箱子容量</p><p>1个整数，表示有n个物品</p><p>接下来n行，分别表示这n个物品的各自体积</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>1个整数，表示箱子剩余空间。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">24</span><br><span class="line">6</span><br><span class="line">8</span><br><span class="line">3</span><br><span class="line">12</span><br><span class="line">7</span><br><span class="line">9</span><br><span class="line">7</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>NOIp2001普及组 第4题</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>01背包问题，还是最标准的那种，借助一下max就行（想动态规划往上面怼的也可以），先输入数据，之后借助二重循环，外层循环是物品的循环，第一件到最后一件，内层循环是重量，从总重量V到物品重量，之后拿总重量减去结果就得到答案。</p><p>（动态规划一定不鸽，有空就写—-鸽德）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> V,n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;V&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">20001</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=V;j&gt;=a[i];j--)</span><br><span class="line">&#123;</span><br><span class="line">f[j]=max(f[j],f[j-a[i]]+a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;V-f[V];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1049-装箱问题&quot;&gt;&lt;a href=&quot;#洛谷-P1049-装箱问题&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1049 装箱问题&quot;&gt;&lt;/a&gt;洛谷 P1049 装箱问题&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; cla
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1097 统计数字</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1097%20%E7%BB%9F%E8%AE%A1%E6%95%B0%E5%AD%97.html"/>
    <id>https://cheng102e.github.io/洛谷 P1097 统计数字.html</id>
    <published>2019-08-08T03:54:00.000Z</published>
    <updated>2019-08-08T03:15:15.051Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1097-统计数字"><a href="#洛谷-P1097-统计数字" class="headerlink" title="洛谷 P1097 统计数字"></a>洛谷 P1097 统计数字</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1097" target="_blank" rel="noopener">https://www.luogu.org/problem/P1097</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h4><p>警告：数据可能存在加强</p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>某次科研调查时得到了n个自然数，每个数均不超过1500000000(1.5×109)。已知不相同的数不超过10000个，现在需要统计这些自然数各自出现的次数，并按照自然数从小到大的顺序输出统计结果。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>共n+1行。</p><p>第一行是整数n，表示自然数的个数；</p><p>第2至n+1每行一个自然数。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>共m行（m为n个自然数中不相同数的个数），按照自然数从小到大的顺序输出。</p><p>每行输出2个整数，分别是自然数和该数出现的次数，其间用一个空格隔开。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">100</span><br><span class="line">2</span><br><span class="line">100</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2 3</span><br><span class="line">4 2</span><br><span class="line">5 1</span><br><span class="line">100 2</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>40%的数据满足：1≤<em>n</em>≤1000</p><p>80%的数据满足：1≤<em>n</em>≤50000</p><p>100%的数据满足：1≤<em>n</em>≤200000，每个数均不超过1500000000(1.5×109)</p><p>NOIP 2007 提高第一题</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>题目的要求就是统计出现的数字和出现的次数，顺便加个排序。这时候借助数据结构会简单很多。</p><p>对于计数，可以用map（数组其实也行），然后就是去重和排序，巧了，set可以满足这些需求，自动去重排序，insert就行。</p><p>最后的输出。。。初始化一下才可以，记住格式就行，之后从头输出到尾。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">map</span> &lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; newmap;</span><br><span class="line">    <span class="built_in">set</span> &lt;<span class="keyword">int</span>&gt; newset;</span><br><span class="line">    <span class="keyword">int</span> n,number;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) </span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;number;</span><br><span class="line">        newmap[number]++;</span><br><span class="line">        newset.insert(number);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator iter;</span><br><span class="line">    <span class="keyword">for</span>(iter=newset.begin(); iter!=newset.end(); iter++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;*iter&lt;&lt;<span class="string">" "</span>&lt;&lt;newmap[*iter]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1097-统计数字&quot;&gt;&lt;a href=&quot;#洛谷-P1097-统计数字&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1097 统计数字&quot;&gt;&lt;/a&gt;洛谷 P1097 统计数字&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; cla
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 2017-09-2 公共钥匙盒</title>
    <link href="https://cheng102e.github.io/CCF%202017-09-2%20%E5%85%AC%E5%85%B1%E9%92%A5%E5%8C%99%E7%9B%92.html"/>
    <id>https://cheng102e.github.io/CCF 2017-09-2 公共钥匙盒.html</id>
    <published>2019-08-07T13:18:00.000Z</published>
    <updated>2019-08-08T02:53:32.182Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-2017-09-2-公共钥匙盒"><a href="#CCF-2017-09-2-公共钥匙盒" class="headerlink" title="CCF 2017-09-2 公共钥匙盒"></a>CCF 2017-09-2 公共钥匙盒</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　有一个学校的老师共用<em>N</em>个教室，按照规定，所有的钥匙都必须放在公共钥匙盒里，老师不能带钥匙回家。每次老师上课前，都从公共钥匙盒里找到自己上课的教室的钥匙去开门，上完课后，再将钥匙放回到钥匙盒中。<br>　　钥匙盒一共有<em>N</em>个挂钩，从左到右排成一排，用来挂<em>N</em>个教室的钥匙。一串钥匙没有固定的悬挂位置，但钥匙上有标识，所以老师们不会弄混钥匙。<br>　　每次取钥匙的时候，老师们都会找到自己所需要的钥匙将其取走，而不会移动其他钥匙。每次还钥匙的时候，还钥匙的老师会找到最左边的空的挂钩，将钥匙挂在这个挂钩上。如果有多位老师还钥匙，则他们按钥匙编号从小到大的顺序还。如果同一时刻既有老师还钥匙又有老师取钥匙，则老师们会先将钥匙全还回去再取出。<br>　　今天开始的时候钥匙是按编号从小到大的顺序放在钥匙盒里的。有<em>K</em>位老师要上课，给出每位老师所需要的钥匙、开始上课的时间和上课的时长，假设下课时间就是还钥匙时间，请问最终钥匙盒里面钥匙的顺序是怎样的？</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>　　输入的第一行包含两个整数<em>N</em>, <em>K</em>。<br>　　接下来<em>K</em>行，每行三个整数<em>w</em>, <em>s</em>, <em>c</em>，分别表示一位老师要使用的钥匙编号、开始上课的时间和上课的时长。可能有多位老师使用同一把钥匙，但是老师使用钥匙的时间不会重叠。<br>　　保证输入数据满足输入格式，你不用检查数据合法性。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>　　输出一行，包含<em>N</em>个整数，相邻整数间用一个空格分隔，依次表示每个挂钩上挂的钥匙编号。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 2</span><br><span class="line">4 3 3</span><br><span class="line">2 2 7</span><br></pre></td></tr></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 4 3 2 5</span><br></pre></td></tr></table></figure><h4 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h4><p>　　第一位老师从时刻3开始使用4号教室的钥匙，使用3单位时间，所以在时刻6还钥匙。第二位老师从时刻2开始使用钥匙，使用7单位时间，所以在时刻9还钥匙。<br>　　每个关键时刻后的钥匙状态如下（X表示空）：<br>　　时刻2后为1X345；<br>　　时刻3后为1X3X5；<br>　　时刻6后为143X5；<br>　　时刻9后为14325。</p><h4 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">5 7</span><br><span class="line">1 1 14</span><br><span class="line">3 3 12</span><br><span class="line">1 15 12</span><br><span class="line">2 7 20</span><br><span class="line">3 18 12</span><br><span class="line">4 21 19</span><br><span class="line">5 30 9</span><br></pre></td></tr></table></figure><h4 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 5 4</span><br></pre></td></tr></table></figure><h4 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h4><p>　　对于30%的评测用例，1 ≤ <em>N</em>, <em>K</em> ≤ 10, 1 ≤ <em>w</em> ≤ <em>N</em>, 1 ≤ <em>s</em>, <em>c</em> ≤ 30；<br>　　对于60%的评测用例，1 ≤ <em>N</em>, <em>K</em> ≤ 50，1 ≤ <em>w</em> ≤ <em>N</em>，1 ≤ <em>s</em> ≤ 300，1 ≤ <em>c</em> ≤ 50；<br>　　对于所有评测用例，1 ≤ <em>N</em>, <em>K</em> ≤ 1000，1 ≤ <em>w</em> ≤ <em>N</em>，1 ≤ <em>s</em> ≤ 10000，1 ≤ <em>c</em> ≤ 100。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这题好像是去年敲的，就偷个懒，用了之前的代码。（如果有空我来把代码重构一下）</p><p>主要考虑到数字处理，顺便将时间线缕清，注意时间顺序，先还后取。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,k,end=<span class="number">0</span>,start=<span class="number">10111</span>,i,j,t,ti;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">int</span> cl[<span class="number">1010</span>],w[<span class="number">1010</span>],s[<span class="number">1010</span>],c[<span class="number">1010</span>],q[<span class="number">1010</span>]; </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">1</span>;t&lt;=n;t++)</span><br><span class="line">&#123;</span><br><span class="line">cl[t]=t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">1</span>;t&lt;=k;t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;w[t]&gt;&gt;s[t]&gt;&gt;c[t];</span><br><span class="line">c[t]=s[t]+c[t];</span><br><span class="line"><span class="keyword">if</span>(c[t]&gt;end)</span><br><span class="line">end=c[t];</span><br><span class="line"><span class="keyword">if</span>(s[t]&lt;start)</span><br><span class="line">start=s[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(ti=start;ti&lt;=end;ti++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//huan</span></span><br><span class="line"><span class="keyword">int</span> huan=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(c[i]==ti)</span><br><span class="line">&#123;</span><br><span class="line">huan++;</span><br><span class="line">q[huan]=w[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=huan;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=huan;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(q[i]&lt;q[j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> ty=q[i];</span><br><span class="line">q[i]=q[j];</span><br><span class="line">q[j]=ty;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=huan;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> po=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n&amp;&amp;po;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(cl[j]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cl[j]=q[i];</span><br><span class="line">po=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//qu</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==ti)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> po=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n&amp;&amp;po;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(cl[j]==w[i])</span><br><span class="line">&#123;</span><br><span class="line">cl[j]=<span class="number">0</span>;</span><br><span class="line">po=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;cl[i];</span><br><span class="line"><span class="keyword">if</span>(i!=n)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-2017-09-2-公共钥匙盒&quot;&gt;&lt;a href=&quot;#CCF-2017-09-2-公共钥匙盒&quot; class=&quot;headerlink&quot; title=&quot;CCF 2017-09-2 公共钥匙盒&quot;&gt;&lt;/a&gt;CCF 2017-09-2 公共钥匙盒&lt;/h2&gt;&lt;h3 i
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 201709-1 打酱油</title>
    <link href="https://cheng102e.github.io/CCF%20201709-1%20%E6%89%93%E9%85%B1%E6%B2%B9.html"/>
    <id>https://cheng102e.github.io/CCF 201709-1 打酱油.html</id>
    <published>2019-08-06T01:18:00.000Z</published>
    <updated>2019-08-06T12:18:39.967Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-201709-1-打酱油"><a href="#CCF-201709-1-打酱油" class="headerlink" title="CCF 201709-1 打酱油"></a>CCF 201709-1 打酱油</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　小明带着<em>N</em>元钱去买酱油。酱油10块钱一瓶，商家进行促销，每买3瓶送1瓶，或者每买5瓶送2瓶。请问小明最多可以得到多少瓶酱油。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>　　输入的第一行包含一个整数<em>N</em>，表示小明可用于买酱油的钱数。<em>N</em>是10的整数倍，<em>N</em>不超过300。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>　　输出一个整数，表示小明最多可以得到多少瓶酱油。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><p>​    40</p><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><p>​    5</p><h4 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h4><p>　　把40元分成30元和10元，分别买3瓶和1瓶，其中3瓶送1瓶，共得到5瓶。</p><h4 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h4><p>​    80</p><h4 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h4><p>​    11</p><h4 id="样例说明-1"><a href="#样例说明-1" class="headerlink" title="样例说明"></a>样例说明</h4><p>　　把80元分成30元和50元，分别买3瓶和5瓶，其中3瓶送1瓶，5瓶送2瓶，共得到11瓶。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>简单题目，考虑到优先级即可。（如果数字比例不同就有可能需要动态规划，但是这题不需要）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n&gt;=<span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n&gt;=<span class="number">50</span>)</span><br><span class="line">&#123;</span><br><span class="line">n-=<span class="number">50</span>;</span><br><span class="line">sum+=<span class="number">7</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n&gt;=<span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">n-=<span class="number">30</span>;</span><br><span class="line">sum+=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sum += n/<span class="number">10</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-201709-1-打酱油&quot;&gt;&lt;a href=&quot;#CCF-201709-1-打酱油&quot; class=&quot;headerlink&quot; title=&quot;CCF 201709-1 打酱油&quot;&gt;&lt;/a&gt;CCF 201709-1 打酱油&lt;/h2&gt;&lt;h3 id=&quot;题目&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1007 独木桥</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1007%20%E7%8B%AC%E6%9C%A8%E6%A1%A5.html"/>
    <id>https://cheng102e.github.io/洛谷 P1007 独木桥.html</id>
    <published>2019-08-05T01:18:00.000Z</published>
    <updated>2019-08-05T01:27:47.887Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1007-独木桥"><a href="#洛谷-P1007-独木桥" class="headerlink" title="洛谷 P1007 独木桥"></a>洛谷 P1007 独木桥</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1007" target="_blank" rel="noopener">https://www.luogu.org/problem/P1007</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h4><p>战争已经进入到紧要时间。你是运输小队长，正在率领运输部队向前线运送物资。运输任务像做题一样的无聊。你希望找些刺激，于是命令你的士兵们到前方的一座独木桥上欣赏风景，而你留在桥下欣赏士兵们。士兵们十分愤怒，因为这座独木桥十分狭窄，只能容纳1个人通过。假如有2个人相向而行在桥上相遇，那么他们2个人将无妨绕过对方，只能有1个人回头下桥，让另一个人先通过。但是，可以有多个人同时呆在同一个位置。</p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>突然，你收到从指挥部发来的信息，敌军的轰炸机正朝着你所在的独木桥飞来！为了安全，你的部队必须撤下独木桥。独木桥的长度为L，士兵们只能呆在坐标为整数的地方。所有士兵的速度都为1，但一个士兵某一时刻来到了坐标为0或L+1的位置，他就离开了独木桥。</p><p>每个士兵都有一个初始面对的方向，他们会以匀速朝着这个方向行走，中途不会自己改变方向。但是，如果两个士兵面对面相遇，他们无法彼此通过对方，于是就分别转身，继续行走。转身不需要任何的时间。</p><p>由于先前的愤怒，你已不能控制你的士兵。甚至，你连每个士兵初始面对的方向都不知道。因此，你想要知道你的部队最少需要多少时间就可能全部撤离独木桥。另外，总部也在安排阻拦敌人的进攻，因此你还需要知道你的部队最多需要多少时间才能全部撤离独木桥。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行：一个整数L，表示独木桥的长度。桥上的坐标为1…L</p><p>第二行：一个整数N，表示初始时留在桥上的士兵数目</p><p>第三行：有N个整数，分别表示每个士兵的初始坐标。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>只有一行，输出2个整数，分别表示部队撤离独木桥的最小时间和最大时间。2个整数由一个空格符分开。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">2</span><br><span class="line">1 3</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 4</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>初始时，没有两个士兵同在一个坐标。</p><p>数据范围N≤L≤5000。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>题目还行，思路也比较清晰，唯一需要注意的点就是，两个士兵相遇掉头和他们交错通过是一样的时间，所以只需要修改min为max即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l,n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;l&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mintime=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">mintime = max(mintime,min(a[i],l+<span class="number">1</span>-a[i]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> maxtime=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">maxtime = max(maxtime,max(a[i],l+<span class="number">1</span>-a[i]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;mintime&lt;&lt;<span class="string">" "</span>&lt;&lt;maxtime;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1007-独木桥&quot;&gt;&lt;a href=&quot;#洛谷-P1007-独木桥&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1007 独木桥&quot;&gt;&lt;/a&gt;洛谷 P1007 独木桥&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1011 车站</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1011%20%E8%BD%A6%E7%AB%99.html"/>
    <id>https://cheng102e.github.io/洛谷 P1011 车站.html</id>
    <published>2019-08-02T03:23:00.000Z</published>
    <updated>2019-08-02T04:52:57.864Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1011-车站"><a href="#洛谷-P1011-车站" class="headerlink" title="洛谷 P1011 车站"></a>洛谷 P1011 车站</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1011" target="_blank" rel="noopener">https://www.luogu.org/problem/P1011</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>火车从始发站（称为第1站）开出，在始发站上车的人数为a，然后到达第2站，在第22站有人上、下车，但上、下车的人数相同，因此在第2站开出时（即在到达第3站之前）车上的人数保持为a人。从第3站起（包括第3站）上、下车的人数有一定规律：上车的人数都是前两站上车人数之和，而下车人数等于上一站上车人数，一直到终点站的前一站（第n-1站），都满足此规律。现给出的条件是：共有N个车站，始发站上车的人数为a，最后一站下车的人数是m（全部下车）。试问x站开出时车上的人数是多少？</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>a(≤20)，n(≤20)，m(≤2000)，和x(≤20)，</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>从x站开出时车上的人数。  </p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><pre><code>　　5 7 32 4</code></pre><p>输出 #1</p><pre><code>　　13</code></pre><h3 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h3><table><thead><tr><th>站序号(i)</th><th>上车(f)</th><th>下车(g)</th><th>剩余人数(k)</th></tr></thead><tbody><tr><td>1</td><td>a</td><td>0</td><td>a</td></tr><tr><td>2</td><td>t</td><td>t</td><td>a</td></tr><tr><td>3</td><td>a+t</td><td>t</td><td>2a</td></tr><tr><td>4</td><td>a+2t</td><td>a+t</td><td>2a+t</td></tr><tr><td>5</td><td>2a+3t</td><td>a+2t</td><td>3a+2t</td></tr><tr><td>6</td><td>0</td><td>3a+2t</td><td>0</td></tr></tbody></table><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>总结一下规律(中间几站)</p><pre><code>1. 每一站下车人数等于上一站上车人数2. 每一站上车人数等于前两站上车人数和</code></pre><p>我们假设第6站就全部下车，可以得到图解中的表格，归纳总结可以发现<br>(s为斐波那契数列，直接可以计算)</p><pre><code>1. g(i) = f(i-1)2. f(i) = f(i-1) + f(i-2)3. g(n) = f(n-1) + a - t = m4. f(i) = s(i-2)*a + s(i-1)*t5. k(i) = f(i) + f(1) - g(2)</code></pre><p>之后我们就能发现，我们需要的k(x) = f(x) + a - t,推导后只需要两个等式</p><pre><code>1. m - [s(n-3) + 1]*a = [s(n-2) - 1]*t2. k(x) = [s(x-2) + 1]*a + [s(x-1) - 1]*t</code></pre><p>给了我们m,a,n,我们由公式1算出t，公式2算出k(x)即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    int a,n,m,x,t;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;n&gt;&gt;m&gt;&gt;x;</span><br><span class="line">    int s[n];</span><br><span class="line">    s[1]=1;</span><br><span class="line">s[2]=1;</span><br><span class="line">    for(int i=3;i&lt;=n;i++)</span><br><span class="line">     s[i]=s[i-1]+s[i-2];</span><br><span class="line">     </span><br><span class="line">    t=(m-(s[n-3]+1)*a)/(s[n-2]-1);</span><br><span class="line">    cout&lt;&lt;(s[x-2]+1)*a+(s[x-1]-1)*t;</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1011-车站&quot;&gt;&lt;a href=&quot;#洛谷-P1011-车站&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1011 车站&quot;&gt;&lt;/a&gt;洛谷 P1011 车站&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;head
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1307 数字反转</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1307%20%E6%95%B0%E5%AD%97%E5%8F%8D%E8%BD%AC.html"/>
    <id>https://cheng102e.github.io/洛谷 P1307 数字反转.html</id>
    <published>2019-08-01T00:41:00.000Z</published>
    <updated>2019-08-01T07:21:03.313Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1307-数字反转"><a href="#洛谷-P1307-数字反转" class="headerlink" title="洛谷 P1307 数字反转"></a>洛谷 P1307 数字反转</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1307" target="_blank" rel="noopener">https://www.luogu.org/problem/P1307</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>题目描述<br>　　给定一个整数，请将该数各个位上数字反转得到一个新数。新数也应满足整数的常见形式，即除非给定的原数为零，否则反转后得到的新数的最高位数字不应为零（参见样例2）。</p><p>输入格式<br>　　一个整数 NN</p><p>输出格式<br>　　一个整数，表示反转后的新数。</p><p>输入输出样例<br>　　输入 #1<br>　　123<br>　　输出 #1<br>　　321<br>　　输入 #2<br>　　-380<br>　　输出 #2<br>　　-83<br>明/提示<br>　　数据范围</p><p>　　-1,000,000,000≤N≤1,000,000,000</p><p>　　noip2011普及组第一题</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>　　思路清晰，先判断是否为负数，记录一下，之后反复取尾数，直到结束，输出。</p><p>　　这题真的做过，不过上次是在LeetCode上面做的，用的java。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;limits.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int ans = 0;</span><br><span class="line">    int x;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    int num = abs(x);</span><br><span class="line">    int max = INT_MAX/10;</span><br><span class="line">    while(num&gt;0)</span><br><span class="line">    &#123;</span><br><span class="line">        int t = num % 10;</span><br><span class="line">        if(ans &gt; max)</span><br><span class="line">            return 0;</span><br><span class="line">        ans = ans * 10 + t;</span><br><span class="line"></span><br><span class="line">        num = num / 10;</span><br><span class="line">    &#125;</span><br><span class="line">    if(x&gt;0)</span><br><span class="line">        cout &lt;&lt; ans;</span><br><span class="line">    else</span><br><span class="line">        cout &lt;&lt; -ans;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1307-数字反转&quot;&gt;&lt;a href=&quot;#洛谷-P1307-数字反转&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1307 数字反转&quot;&gt;&lt;/a&gt;洛谷 P1307 数字反转&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; cla
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://cheng102e.github.io/Hello%20World.html"/>
    <id>https://cheng102e.github.io/Hello World.html</id>
    <published>2019-08-01T00:00:00.000Z</published>
    <updated>2019-08-06T01:25:04.646Z</updated>
    
    <content type="html"><![CDATA[<p>这是我在GitHub上的写第一篇博客，希望大家能互相学习，共同进步。</p><p>这边的博客因为才开始，所以界面功能也不怎么完善，会慢慢改进。</p><p>博客园地址：<a href="https://www.cnblogs.com/blogxjc/" target="_blank" rel="noopener">https://www.cnblogs.com/blogxjc/</a></p><p>迁移的时候出了点问题，所以8月1日前的博客会存在时间上的问题。</p><p>最近需要专心备考，考研初试之后更新会多。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是我在GitHub上的写第一篇博客，希望大家能互相学习，共同进步。&lt;/p&gt;
&lt;p&gt;这边的博客因为才开始，所以界面功能也不怎么完善，会慢慢改进。&lt;/p&gt;
&lt;p&gt;博客园地址：&lt;a href=&quot;https://www.cnblogs.com/blogxjc/&quot; target=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CCF 201712-1 最小差值</title>
    <link href="https://cheng102e.github.io/CCF%20201712-1%20%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC.html"/>
    <id>https://cheng102e.github.io/CCF 201712-1 最小差值.html</id>
    <published>2019-07-29T17:45:00.000Z</published>
    <updated>2019-08-01T05:18:25.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-201712-1-最小差值"><a href="#CCF-201712-1-最小差值" class="headerlink" title="CCF 201712-1 最小差值"></a>CCF 201712-1 最小差值</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>给定 <em>n</em> 个数，请找出其中相差（差的绝对值）最小的两个数，输出它们的差值的绝对值。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入第一行包含一个整数 <em>n</em> 。<br>第二行包含 <em>n</em> 个正整数，相邻整数之间使用一个空格分隔。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示答案。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>5  1 5 4 8 20</code></pre><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><pre><code>1</code></pre><h4 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h4><p>相差最小的两个数是5和4，它们之间的差值是1。</p><h4 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>5  9 3 6 1 3</code></pre><h4 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h4><pre><code>0</code></pre><h4 id="样例说明-1"><a href="#样例说明-1" class="headerlink" title="样例说明"></a>样例说明</h4><p>有两个相同的数3，它们之间的差值是0.</p><h4 id="数据规模和约定"><a href="#数据规模和约定" class="headerlink" title="数据规模和约定"></a>数据规模和约定</h4><p>对于所有评测用例，2 ≤  <em>n</em>  ≤ 1000，每个给定的整数都是不超过10000的正整数。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>数组处理，来个二重循环找最小值，第一题也不会在时间上面卡人的。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">int min=10000;</span><br><span class="line">int a[n];</span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(int j=i+1;j&lt;n;j++)</span><br><span class="line">&#123;</span><br><span class="line">if(abs(a[i]-a[j])&lt;min)</span><br><span class="line">min=abs(a[i]-a[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;min;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-201712-1-最小差值&quot;&gt;&lt;a href=&quot;#CCF-201712-1-最小差值&quot; class=&quot;headerlink&quot; title=&quot;CCF 201712-1 最小差值&quot;&gt;&lt;/a&gt;CCF 201712-1 最小差值&lt;/h2&gt;&lt;h3 id=&quot;题目&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="CCF" scheme="https://cheng102e.github.io/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1003 铺地毯</title>
    <link href="https://cheng102e.github.io/%E6%B4%9B%E8%B0%B7%20P1003%20%E9%93%BA%E5%9C%B0%E6%AF%AF.html"/>
    <id>https://cheng102e.github.io/洛谷 P1003 铺地毯.html</id>
    <published>2019-07-28T17:18:00.000Z</published>
    <updated>2019-08-06T13:10:54.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1003-铺地毯"><a href="#洛谷-P1003-铺地毯" class="headerlink" title="洛谷 P1003 铺地毯"></a>洛谷 P1003 铺地毯</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1003" target="_blank" rel="noopener">https://www.luogu.org/problem/P1003</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>为了准备一个独特的颁奖典礼，组织者在会场的一片矩形区域（可看做是平面直角坐标系的第一象限）铺上一些矩形地毯。一共有 n张地毯，编号从 1<br>到n。现在将这些地毯按照编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。</p><p>地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。注意：在矩形地毯边界和四个顶点上的点也算被地毯覆盖。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入共n+2行</p><p>第一行，一个整数n，表示总共有nn张地毯</p><p>接下来的n行中，第 i+1行表示编号ii的地毯的信息，包含四个正整数a ,b ,g ,k<br>，每两个整数之间用一个空格隔开，分别表示铺设地毯的左下角的坐标(a,b)以及地毯在x轴和y轴方向的长度</p><p>第n+2行包含两个正整数x和y，表示所求的地面的点的坐标(x,y)  </p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出共1行，一个整数，表示所求的地毯的编号；若此处没有被地毯覆盖则输出-1  </p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><pre><code>　　3　　1 0 2 3　　0 2 3 3　　2 1 3 3　　2 2</code></pre><p>输出 #1</p><pre><code>　　3</code></pre><p>输入 #2</p><pre><code>　　3　　1 0 2 3　　0 2 3 3　　2 1 3 3　　4 5</code></pre><p>输出 #2</p><pre><code>　　-1</code></pre><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>【样例解释1】</p><p>如下图，1号地毯用实线表示，2 号地毯用虚线表示，3号用双实线表示，覆盖点(2,2)的最上面一张地毯是 3 号地毯。</p><p><img src="https://cdn.luogu.org/upload/pic/100.png" alt></p><p>【数据范围】</p><p>对于30% 的数据，有 n ≤2 ；<br>对于50% 的数据，0 ≤a, b, g, k≤100；<br>对于100%的数据，有 0 ≤n ≤10,000，0≤a, b, g, k ≤100,000。</p><p>noip2011提高组day1第1题</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>本来是打算偷懒的，但是我的devc++好像不能初始化10000*10000的数组，我就换了个方式。</p><p>先把所有数据输入，之后倒序查找，查找点是否在最后一张地毯上，在就跳出，不然就查找倒数第二条。</p><p>（话说洛谷题目复制，有数字字母会重影，就很浮夸）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    int a[10001],b[10001],c[10001],d[10001];</span><br><span class="line">    int ans;</span><br><span class="line">    int x,y;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i]&gt;&gt;b[i]&gt;&gt;c[i]&gt;&gt;d[i];</span><br><span class="line">    &#125;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line"></span><br><span class="line">bool flag=false;</span><br><span class="line">for(int i=n;i&gt;0;i--)</span><br><span class="line">&#123;</span><br><span class="line">    if(a[i]&lt;=x&amp;&amp;a[i]+c[i]&gt;=x&amp;&amp;b[i]&lt;=y&amp;&amp;b[i]+d[i]&gt;=y)</span><br><span class="line">    &#123;</span><br><span class="line">        ans=i;</span><br><span class="line">        flag=true;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(flag)</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">else</span><br><span class="line">    cout&lt;&lt;&quot;-1&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1003-铺地毯&quot;&gt;&lt;a href=&quot;#洛谷-P1003-铺地毯&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1003 铺地毯&quot;&gt;&lt;/a&gt;洛谷 P1003 铺地毯&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;
      
    
    </summary>
    
      <category term="洛谷" scheme="https://cheng102e.github.io/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
</feed>
