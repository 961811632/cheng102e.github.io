<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cheng102e的博客</title>
  
  <subtitle>我永远喜欢学习（期间限定）</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-06T12:18:39.967Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>cheng102e</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CCF 201709-1 打酱油</title>
    <link href="http://yoursite.com/CCF%20201709-1%20%E6%89%93%E9%85%B1%E6%B2%B9.html"/>
    <id>http://yoursite.com/CCF 201709-1 打酱油.html</id>
    <published>2019-08-06T01:18:00.000Z</published>
    <updated>2019-08-06T12:18:39.967Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-201709-1-打酱油"><a href="#CCF-201709-1-打酱油" class="headerlink" title="CCF 201709-1 打酱油"></a>CCF 201709-1 打酱油</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>　　小明带着<em>N</em>元钱去买酱油。酱油10块钱一瓶，商家进行促销，每买3瓶送1瓶，或者每买5瓶送2瓶。请问小明最多可以得到多少瓶酱油。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>　　输入的第一行包含一个整数<em>N</em>，表示小明可用于买酱油的钱数。<em>N</em>是10的整数倍，<em>N</em>不超过300。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>　　输出一个整数，表示小明最多可以得到多少瓶酱油。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><p>​    40</p><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><p>​    5</p><h4 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h4><p>　　把40元分成30元和10元，分别买3瓶和1瓶，其中3瓶送1瓶，共得到5瓶。</p><h4 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h4><p>​    80</p><h4 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h4><p>​    11</p><h4 id="样例说明-1"><a href="#样例说明-1" class="headerlink" title="样例说明"></a>样例说明</h4><p>　　把80元分成30元和50元，分别买3瓶和5瓶，其中3瓶送1瓶，5瓶送2瓶，共得到11瓶。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>简单题目，考虑到优先级即可。（如果数字比例不同就有可能需要动态规划，但是这题不需要）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n&gt;=<span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n&gt;=<span class="number">50</span>)</span><br><span class="line">&#123;</span><br><span class="line">n-=<span class="number">50</span>;</span><br><span class="line">sum+=<span class="number">7</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n&gt;=<span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">n-=<span class="number">30</span>;</span><br><span class="line">sum+=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sum += n/<span class="number">10</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-201709-1-打酱油&quot;&gt;&lt;a href=&quot;#CCF-201709-1-打酱油&quot; class=&quot;headerlink&quot; title=&quot;CCF 201709-1 打酱油&quot;&gt;&lt;/a&gt;CCF 201709-1 打酱油&lt;/h2&gt;&lt;h3 id=&quot;题目&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="CCF" scheme="http://yoursite.com/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1007 独木桥</title>
    <link href="http://yoursite.com/%E6%B4%9B%E8%B0%B7%20P1007%20%E7%8B%AC%E6%9C%A8%E6%A1%A5.html"/>
    <id>http://yoursite.com/洛谷 P1007 独木桥.html</id>
    <published>2019-08-05T01:18:00.000Z</published>
    <updated>2019-08-05T01:27:47.887Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1007-独木桥"><a href="#洛谷-P1007-独木桥" class="headerlink" title="洛谷 P1007 独木桥"></a>洛谷 P1007 独木桥</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1007" target="_blank" rel="noopener">https://www.luogu.org/problem/P1007</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h4><p>战争已经进入到紧要时间。你是运输小队长，正在率领运输部队向前线运送物资。运输任务像做题一样的无聊。你希望找些刺激，于是命令你的士兵们到前方的一座独木桥上欣赏风景，而你留在桥下欣赏士兵们。士兵们十分愤怒，因为这座独木桥十分狭窄，只能容纳1个人通过。假如有2个人相向而行在桥上相遇，那么他们2个人将无妨绕过对方，只能有1个人回头下桥，让另一个人先通过。但是，可以有多个人同时呆在同一个位置。</p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>突然，你收到从指挥部发来的信息，敌军的轰炸机正朝着你所在的独木桥飞来！为了安全，你的部队必须撤下独木桥。独木桥的长度为L，士兵们只能呆在坐标为整数的地方。所有士兵的速度都为1，但一个士兵某一时刻来到了坐标为0或L+1的位置，他就离开了独木桥。</p><p>每个士兵都有一个初始面对的方向，他们会以匀速朝着这个方向行走，中途不会自己改变方向。但是，如果两个士兵面对面相遇，他们无法彼此通过对方，于是就分别转身，继续行走。转身不需要任何的时间。</p><p>由于先前的愤怒，你已不能控制你的士兵。甚至，你连每个士兵初始面对的方向都不知道。因此，你想要知道你的部队最少需要多少时间就可能全部撤离独木桥。另外，总部也在安排阻拦敌人的进攻，因此你还需要知道你的部队最多需要多少时间才能全部撤离独木桥。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行：一个整数L，表示独木桥的长度。桥上的坐标为1…L</p><p>第二行：一个整数N，表示初始时留在桥上的士兵数目</p><p>第三行：有N个整数，分别表示每个士兵的初始坐标。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>只有一行，输出2个整数，分别表示部队撤离独木桥的最小时间和最大时间。2个整数由一个空格符分开。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">2</span><br><span class="line">1 3</span><br></pre></td></tr></table></figure><p>输出 #1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 4</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>初始时，没有两个士兵同在一个坐标。</p><p>数据范围N≤L≤5000。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>题目还行，思路也比较清晰，唯一需要注意的点就是，两个士兵相遇掉头和他们交错通过是一样的时间，所以只需要修改min为max即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l,n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;l&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mintime=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">mintime = max(mintime,min(a[i],l+<span class="number">1</span>-a[i]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> maxtime=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">maxtime = max(maxtime,max(a[i],l+<span class="number">1</span>-a[i]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;mintime&lt;&lt;<span class="string">" "</span>&lt;&lt;maxtime;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1007-独木桥&quot;&gt;&lt;a href=&quot;#洛谷-P1007-独木桥&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1007 独木桥&quot;&gt;&lt;/a&gt;洛谷 P1007 独木桥&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;
      
    
    </summary>
    
      <category term="洛谷" scheme="http://yoursite.com/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1011 车站</title>
    <link href="http://yoursite.com/%E6%B4%9B%E8%B0%B7%20P1011%20%E8%BD%A6%E7%AB%99.html"/>
    <id>http://yoursite.com/洛谷 P1011 车站.html</id>
    <published>2019-08-02T03:23:00.000Z</published>
    <updated>2019-08-02T04:52:57.864Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1011-车站"><a href="#洛谷-P1011-车站" class="headerlink" title="洛谷 P1011 车站"></a>洛谷 P1011 车站</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1011" target="_blank" rel="noopener">https://www.luogu.org/problem/P1011</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>火车从始发站（称为第1站）开出，在始发站上车的人数为a，然后到达第2站，在第22站有人上、下车，但上、下车的人数相同，因此在第2站开出时（即在到达第3站之前）车上的人数保持为a人。从第3站起（包括第3站）上、下车的人数有一定规律：上车的人数都是前两站上车人数之和，而下车人数等于上一站上车人数，一直到终点站的前一站（第n-1站），都满足此规律。现给出的条件是：共有N个车站，始发站上车的人数为a，最后一站下车的人数是m（全部下车）。试问x站开出时车上的人数是多少？</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>a(≤20)，n(≤20)，m(≤2000)，和x(≤20)，</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>从x站开出时车上的人数。  </p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><pre><code>　　5 7 32 4</code></pre><p>输出 #1</p><pre><code>　　13</code></pre><h3 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h3><table><thead><tr><th>站序号(i)</th><th>上车(f)</th><th>下车(g)</th><th>剩余人数(k)</th></tr></thead><tbody><tr><td>1</td><td>a</td><td>0</td><td>a</td></tr><tr><td>2</td><td>t</td><td>t</td><td>a</td></tr><tr><td>3</td><td>a+t</td><td>t</td><td>2a</td></tr><tr><td>4</td><td>a+2t</td><td>a+t</td><td>2a+t</td></tr><tr><td>5</td><td>2a+3t</td><td>a+2t</td><td>3a+2t</td></tr><tr><td>6</td><td>0</td><td>3a+2t</td><td>0</td></tr></tbody></table><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>总结一下规律(中间几站)</p><pre><code>1. 每一站下车人数等于上一站上车人数2. 每一站上车人数等于前两站上车人数和</code></pre><p>我们假设第6站就全部下车，可以得到图解中的表格，归纳总结可以发现<br>(s为斐波那契数列，直接可以计算)</p><pre><code>1. g(i) = f(i-1)2. f(i) = f(i-1) + f(i-2)3. g(n) = f(n-1) + a - t = m4. f(i) = s(i-2)*a + s(i-1)*t5. k(i) = f(i) + f(1) - g(2)</code></pre><p>之后我们就能发现，我们需要的k(x) = f(x) + a - t,推导后只需要两个等式</p><pre><code>1. m - [s(n-3) + 1]*a = [s(n-2) - 1]*t2. k(x) = [s(x-2) + 1]*a + [s(x-1) - 1]*t</code></pre><p>给了我们m,a,n,我们由公式1算出t，公式2算出k(x)即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    int a,n,m,x,t;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;n&gt;&gt;m&gt;&gt;x;</span><br><span class="line">    int s[n];</span><br><span class="line">    s[1]=1;</span><br><span class="line">s[2]=1;</span><br><span class="line">    for(int i=3;i&lt;=n;i++)</span><br><span class="line">     s[i]=s[i-1]+s[i-2];</span><br><span class="line">     </span><br><span class="line">    t=(m-(s[n-3]+1)*a)/(s[n-2]-1);</span><br><span class="line">    cout&lt;&lt;(s[x-2]+1)*a+(s[x-1]-1)*t;</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1011-车站&quot;&gt;&lt;a href=&quot;#洛谷-P1011-车站&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1011 车站&quot;&gt;&lt;/a&gt;洛谷 P1011 车站&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;head
      
    
    </summary>
    
      <category term="洛谷" scheme="http://yoursite.com/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1307 数字反转</title>
    <link href="http://yoursite.com/%E6%B4%9B%E8%B0%B7%20P1307%20%E6%95%B0%E5%AD%97%E5%8F%8D%E8%BD%AC.html"/>
    <id>http://yoursite.com/洛谷 P1307 数字反转.html</id>
    <published>2019-08-01T00:41:00.000Z</published>
    <updated>2019-08-01T07:21:03.313Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1307-数字反转"><a href="#洛谷-P1307-数字反转" class="headerlink" title="洛谷 P1307 数字反转"></a>洛谷 P1307 数字反转</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1307" target="_blank" rel="noopener">https://www.luogu.org/problem/P1307</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>题目描述<br>　　给定一个整数，请将该数各个位上数字反转得到一个新数。新数也应满足整数的常见形式，即除非给定的原数为零，否则反转后得到的新数的最高位数字不应为零（参见样例2）。</p><p>输入格式<br>　　一个整数 NN</p><p>输出格式<br>　　一个整数，表示反转后的新数。</p><p>输入输出样例<br>　　输入 #1<br>　　123<br>　　输出 #1<br>　　321<br>　　输入 #2<br>　　-380<br>　　输出 #2<br>　　-83<br>明/提示<br>　　数据范围</p><p>　　-1,000,000,000≤N≤1,000,000,000</p><p>　　noip2011普及组第一题</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>　　思路清晰，先判断是否为负数，记录一下，之后反复取尾数，直到结束，输出。</p><p>　　这题真的做过，不过上次是在LeetCode上面做的，用的java。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;limits.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int ans = 0;</span><br><span class="line">    int x;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    int num = abs(x);</span><br><span class="line">    int max = INT_MAX/10;</span><br><span class="line">    while(num&gt;0)</span><br><span class="line">    &#123;</span><br><span class="line">        int t = num % 10;</span><br><span class="line">        if(ans &gt; max)</span><br><span class="line">            return 0;</span><br><span class="line">        ans = ans * 10 + t;</span><br><span class="line"></span><br><span class="line">        num = num / 10;</span><br><span class="line">    &#125;</span><br><span class="line">    if(x&gt;0)</span><br><span class="line">        cout &lt;&lt; ans;</span><br><span class="line">    else</span><br><span class="line">        cout &lt;&lt; -ans;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1307-数字反转&quot;&gt;&lt;a href=&quot;#洛谷-P1307-数字反转&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1307 数字反转&quot;&gt;&lt;/a&gt;洛谷 P1307 数字反转&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; cla
      
    
    </summary>
    
      <category term="洛谷" scheme="http://yoursite.com/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/Hello%20World.html"/>
    <id>http://yoursite.com/Hello World.html</id>
    <published>2019-08-01T00:00:00.000Z</published>
    <updated>2019-08-06T01:25:04.646Z</updated>
    
    <content type="html"><![CDATA[<p>这是我在GitHub上的写第一篇博客，希望大家能互相学习，共同进步。</p><p>这边的博客因为才开始，所以界面功能也不怎么完善，会慢慢改进。</p><p>博客园地址：<a href="https://www.cnblogs.com/blogxjc/" target="_blank" rel="noopener">https://www.cnblogs.com/blogxjc/</a></p><p>迁移的时候出了点问题，所以8月1日前的博客会存在时间上的问题。</p><p>最近需要专心备考，考研初试之后更新会多。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是我在GitHub上的写第一篇博客，希望大家能互相学习，共同进步。&lt;/p&gt;
&lt;p&gt;这边的博客因为才开始，所以界面功能也不怎么完善，会慢慢改进。&lt;/p&gt;
&lt;p&gt;博客园地址：&lt;a href=&quot;https://www.cnblogs.com/blogxjc/&quot; target=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CCF 201712-1 最小差值</title>
    <link href="http://yoursite.com/CCF%20201712-1%20%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC.html"/>
    <id>http://yoursite.com/CCF 201712-1 最小差值.html</id>
    <published>2019-07-29T17:45:00.000Z</published>
    <updated>2019-08-01T05:18:25.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-201712-1-最小差值"><a href="#CCF-201712-1-最小差值" class="headerlink" title="CCF 201712-1 最小差值"></a>CCF 201712-1 最小差值</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>给定 <em>n</em> 个数，请找出其中相差（差的绝对值）最小的两个数，输出它们的差值的绝对值。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入第一行包含一个整数 <em>n</em> 。<br>第二行包含 <em>n</em> 个正整数，相邻整数之间使用一个空格分隔。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示答案。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>5  1 5 4 8 20</code></pre><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><pre><code>1</code></pre><h4 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h4><p>相差最小的两个数是5和4，它们之间的差值是1。</p><h4 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>5  9 3 6 1 3</code></pre><h4 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h4><pre><code>0</code></pre><h4 id="样例说明-1"><a href="#样例说明-1" class="headerlink" title="样例说明"></a>样例说明</h4><p>有两个相同的数3，它们之间的差值是0.</p><h4 id="数据规模和约定"><a href="#数据规模和约定" class="headerlink" title="数据规模和约定"></a>数据规模和约定</h4><p>对于所有评测用例，2 ≤  <em>n</em>  ≤ 1000，每个给定的整数都是不超过10000的正整数。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>数组处理，来个二重循环找最小值，第一题也不会在时间上面卡人的。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">int min=10000;</span><br><span class="line">int a[n];</span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(int j=i+1;j&lt;n;j++)</span><br><span class="line">&#123;</span><br><span class="line">if(abs(a[i]-a[j])&lt;min)</span><br><span class="line">min=abs(a[i]-a[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;min;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-201712-1-最小差值&quot;&gt;&lt;a href=&quot;#CCF-201712-1-最小差值&quot; class=&quot;headerlink&quot; title=&quot;CCF 201712-1 最小差值&quot;&gt;&lt;/a&gt;CCF 201712-1 最小差值&lt;/h2&gt;&lt;h3 id=&quot;题目&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="CCF" scheme="http://yoursite.com/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1003 铺地毯</title>
    <link href="http://yoursite.com/%E6%B4%9B%E8%B0%B7_P1003_%E9%93%BA%E5%9C%B0%E6%AF%AF.html"/>
    <id>http://yoursite.com/洛谷_P1003_铺地毯.html</id>
    <published>2019-07-28T17:18:00.000Z</published>
    <updated>2019-08-06T12:40:41.782Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1003-铺地毯"><a href="#洛谷-P1003-铺地毯" class="headerlink" title="洛谷 P1003 铺地毯"></a>洛谷 P1003 铺地毯</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1003" target="_blank" rel="noopener">https://www.luogu.org/problem/P1003</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>为了准备一个独特的颁奖典礼，组织者在会场的一片矩形区域（可看做是平面直角坐标系的第一象限）铺上一些矩形地毯。一共有 n张地毯，编号从 1<br>到n。现在将这些地毯按照编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。</p><p>地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。注意：在矩形地毯边界和四个顶点上的点也算被地毯覆盖。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入共n+2行</p><p>第一行，一个整数n，表示总共有nn张地毯</p><p>接下来的n行中，第 i+1行表示编号ii的地毯的信息，包含四个正整数a ,b ,g ,k<br>，每两个整数之间用一个空格隔开，分别表示铺设地毯的左下角的坐标(a,b)以及地毯在x轴和y轴方向的长度</p><p>第n+2行包含两个正整数x和y，表示所求的地面的点的坐标(x,y)  </p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出共1行，一个整数，表示所求的地毯的编号；若此处没有被地毯覆盖则输出-1  </p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><pre><code>　　3　　1 0 2 3　　0 2 3 3　　2 1 3 3　　2 2</code></pre><p>输出 #1</p><pre><code>　　3</code></pre><p>输入 #2</p><pre><code>　　3　　1 0 2 3　　0 2 3 3　　2 1 3 3　　4 5</code></pre><p>输出 #2</p><pre><code>　　-1</code></pre><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>【样例解释1】</p><p>如下图，1号地毯用实线表示，2 号地毯用虚线表示，3号用双实线表示，覆盖点(2,2)的最上面一张地毯是 3 号地毯。</p><p><img src="https://cdn.luogu.org/upload/pic/100.png" alt></p><p>【数据范围】</p><p>对于30% 的数据，有 n ≤2 ；<br>对于50% 的数据，0 ≤a, b, g, k≤100；<br>对于100%的数据，有 0 ≤n ≤10,000，0≤a, b, g, k ≤100,000。</p><p>noip2011提高组day1第1题</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>本来是打算偷懒的，但是我的devc++好像不能初始化10000*10000的数组，我就换了个方式。</p><p>先把所有数据输入，之后倒序查找，查找点是否在最后一张地毯上，在就跳出，不然就查找倒数第二条。</p><p>（话说洛谷题目复制，有数字字母会重影，就很浮夸）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    int a[10001],b[10001],c[10001],d[10001];</span><br><span class="line">    int ans;</span><br><span class="line">    int x,y;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i]&gt;&gt;b[i]&gt;&gt;c[i]&gt;&gt;d[i];</span><br><span class="line">    &#125;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line"></span><br><span class="line">bool flag=false;</span><br><span class="line">for(int i=n;i&gt;0;i--)</span><br><span class="line">&#123;</span><br><span class="line">    if(a[i]&lt;=x&amp;&amp;a[i]+c[i]&gt;=x&amp;&amp;b[i]&lt;=y&amp;&amp;b[i]+d[i]&gt;=y)</span><br><span class="line">    &#123;</span><br><span class="line">        ans=i;</span><br><span class="line">        flag=true;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(flag)</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">else</span><br><span class="line">    cout&lt;&lt;&quot;-1&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1003-铺地毯&quot;&gt;&lt;a href=&quot;#洛谷-P1003-铺地毯&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1003 铺地毯&quot;&gt;&lt;/a&gt;洛谷 P1003 铺地毯&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;
      
    
    </summary>
    
      <category term="洛谷" scheme="http://yoursite.com/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>LeetCode 334. Increasing Triplet Subsequence</title>
    <link href="http://yoursite.com/LeetCode%20334.%20Increasing%20Triplet%20Subsequence.html"/>
    <id>http://yoursite.com/LeetCode 334. Increasing Triplet Subsequence.html</id>
    <published>2019-07-27T18:32:00.000Z</published>
    <updated>2019-08-01T06:50:50.756Z</updated>
    
    <content type="html"><![CDATA[<h2 id="334-Increasing-Triplet-Subsequence（递增的三元子序列）"><a href="#334-Increasing-Triplet-Subsequence（递增的三元子序列）" class="headerlink" title="334.Increasing Triplet Subsequence（递增的三元子序列）"></a>334.Increasing Triplet Subsequence（递增的三元子序列）</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://leetcode-cn.com/problems/increasing-triplet-subsequence/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/increasing-triplet-subsequence/</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>给定一个未排序的数组，判断这个数组中是否存在长度为 3 的递增子序列。</p><p>数学表达式如下:</p><p>如果存在这样的 i, j, k,  且满足 0 ≤ i &lt; j &lt; k ≤ n-1，<br>使得 arr[i] &lt; arr[j] &lt; arr[k] ，返回 true ; 否则返回 false 。<br>说明: 要求算法的时间复杂度为 O(n)，空间复杂度为 O(1) 。</p><p>示例 1:</p><p>输入: [1,2,3,4,5]<br>输出: true<br>示例 2:</p><p>输入: [5,4,3,2,1]<br>输出: false</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>O（n）那就从头到尾跑一遍就行，简单易懂，设置最小的数字one，次小的数字two，遍历时记得更新这两个数，如果发现数字比two还大，那么达成目的，返回true，不然就是false。</p><p>（这题我好像也做过emmmmmm）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public boolean increasingTriplet(int[] nums) &#123;</span><br><span class="line">  if (nums.length &lt; 3) &#123;</span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line">  int one = Integer.MAX_VALUE;</span><br><span class="line">  int two = Integer.MAX_VALUE;</span><br><span class="line">  for (int i = 0; i &lt; nums.length; i++) &#123;</span><br><span class="line">    if (nums[i] &gt; two) &#123;</span><br><span class="line">      return true;</span><br><span class="line">    &#125;</span><br><span class="line">    if (nums[i] &lt; one) &#123;</span><br><span class="line">      one = nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    if (nums[i] &gt; one &amp;&amp; nums[i] &lt; two) &#123;</span><br><span class="line">      two = nums[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  return false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;334-Increasing-Triplet-Subsequence（递增的三元子序列）&quot;&gt;&lt;a href=&quot;#334-Increasing-Triplet-Subsequence（递增的三元子序列）&quot; class=&quot;headerlink&quot; title=&quot;334.
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1583 魔法照片</title>
    <link href="http://yoursite.com/%E6%B4%9B%E8%B0%B7%20P1583%20%E9%AD%94%E6%B3%95%E7%85%A7%E7%89%87.html"/>
    <id>http://yoursite.com/洛谷 P1583 魔法照片.html</id>
    <published>2019-07-25T17:18:00.000Z</published>
    <updated>2019-08-01T05:03:38.234Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1583-魔法照片"><a href="#洛谷-P1583-魔法照片" class="headerlink" title="洛谷 P1583 魔法照片"></a>洛谷 P1583 魔法照片</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1583" target="_blank" rel="noopener">https://www.luogu.org/problem/P1583</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>一共有n（n≤20000）个人（以1–<br>n编号）向佳佳要照片，而佳佳只能把照片给其中的k个人。佳佳按照与他们的关系好坏的程度给每个人赋予了一个初始权值W[i]。然后将初始权值从大到小进行排序，每人就有了一个序号D[i]（取值同样是1<br>–n）。按照这个序号对10取模的值将这些人分为10类。也就是说定义每个人的类别序号C[i]的值为(D[i]-1) mod 10<br>+1，显然类别序号的取值为1–<br>10。第i类的人将会额外得到E[i]的权值。你需要做的就是求出加上额外权值以后，最终的权值最大的k个人，并输出他们的编号。在排序中，如果两人的W[i]相同，编号小的优先。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入用空格隔开的两个整数，分别是n和k。</p><p>第二行给出了10个正整数，分别是E[1]到E[10]。</p><p>第三行给出了n个正整数，第i个数表示编号为i的人的权值W[i]。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>只需输出一行用空格隔开的k个整数，分别表示最终的W[i]从高到低的人的编号。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1</p><pre><code>　　10 10　　1 2 3 4 5 6 7 8 9 10　　2 4 6 8 10 12 14 16 18 20</code></pre><p>输出 #1</p><pre><code>　　10 9 8 7 6 5 4 3 2 1</code></pre><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>排序，直接想到sort，每个对象多个元素，想起结构体，成了。</p><p>结构体中设置num表示初始序号，w表示权值，d表示取模后的值（不要也可以）；sort函数优先权值排序，其次序号排序，输入，排序，更新，排序，输出，行了。</p><p>（好像前几天才做过同类型的题目）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">struct peo</span><br><span class="line">&#123;</span><br><span class="line">int num;</span><br><span class="line">int w;</span><br><span class="line">int d;</span><br><span class="line">&#125;p[20001];</span><br><span class="line"></span><br><span class="line">bool cmp(peo a,peo b)</span><br><span class="line">&#123;</span><br><span class="line">if(a.w!=b.w)</span><br><span class="line">return a.w&gt;b.w;</span><br><span class="line">else </span><br><span class="line">return a.num&lt;b.num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int n,k;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">int e[11];</span><br><span class="line">for(int i=1;i&lt;11;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;e[i];</span><br><span class="line">&#125; </span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;p[i].w;</span><br><span class="line">p[i].num=i+1;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">sort(p,p+n,cmp);</span><br><span class="line"></span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">p[i].d = i%10+1;</span><br><span class="line">p[i].w += e[p[i].d];</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">sort(p,p+n,cmp);</span><br><span class="line">for(int i=0;i&lt;k;i++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;p[i].num&lt;&lt;&quot; &quot;;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1583-魔法照片&quot;&gt;&lt;a href=&quot;#洛谷-P1583-魔法照片&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1583 魔法照片&quot;&gt;&lt;/a&gt;洛谷 P1583 魔法照片&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; cla
      
    
    </summary>
    
      <category term="洛谷" scheme="http://yoursite.com/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>LeetCode 1103. Distribute Candies to People</title>
    <link href="http://yoursite.com/LeetCode%201103.%20Distribute%20Candies%20to%20People.html"/>
    <id>http://yoursite.com/LeetCode 1103. Distribute Candies to People.html</id>
    <published>2019-07-24T18:47:00.000Z</published>
    <updated>2019-08-01T07:15:32.153Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1103-Distribute-Candies-to-People（分糖果-）"><a href="#1103-Distribute-Candies-to-People（分糖果-）" class="headerlink" title="1103.Distribute Candies to People（分糖果||）"></a>1103.Distribute Candies to People（分糖果||）</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://leetcode-cn.com/problems/distribute-candies-to-people/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/distribute-candies-to-people/</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>排排坐，分糖果。</p><p>我们买了一些糖果 candies，打算把它们分给排好队的 n = num_people 个小朋友。</p><p>给第一个小朋友 1 颗糖果，第二个小朋友 2 颗，依此类推，直到给最后一个小朋友 n 颗糖果。</p><p>然后，我们再回到队伍的起点，给第一个小朋友 n + 1 颗糖果，第二个小朋友 n + 2 颗，依此类推，直到给最后一个小朋友 2 * n 颗糖果。</p><p>重复上述过程（每次都比上一次多给出一颗糖果，当到达队伍终点后再次从队伍起点开始），直到我们分完所有的糖果。注意，就算我们手中的剩下糖果数不够（不比前一次发出的糖果多），这些糖果也会全部发给当前的小朋友。</p><p>返回一个长度为 num_people、元素之和为 candies 的数组，以表示糖果的最终分发情况（即 ans[i] 表示第 i 个小朋友分到的糖果数）。</p><p>示例 1：</p><p>输入：candies = 7, num_people = 4<br>输出：[1,2,3,1]<br>解释：<br>第一次，ans[0] += 1，数组变为 [1,0,0,0]。<br>第二次，ans[1] += 2，数组变为 [1,2,0,0]。<br>第三次，ans[2] += 3，数组变为 [1,2,3,0]。<br>第四次，ans[3] += 1（因为此时只剩下 1 颗糖果），最终数组变为 [1,2,3,1]。<br>示例 2：</p><p>输入：candies = 10, num_people = 3<br>输出：[5,2,3]<br>解释：<br>第一次，ans[0] += 1，数组变为 [1,0,0]。<br>第二次，ans[1] += 2，数组变为 [1,2,0]。<br>第三次，ans[2] += 3，数组变为 [1,2,3]。<br>第四次，ans[0] += 4，最终数组变为 [5,2,3]。  </p><p>提示：</p><p>1 &lt;= candies &lt;= 10^9</p><p><em>1 &lt;= num_people &lt;= 1000</em></p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>没啥思路，套一个循环，注意改变数量和及时跳出即可。如果想要更简单一点的，可以通过通项公式直接算出该轮所需糖果，直接分配也行。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public int[] distributeCandies(int candies, int num_people) &#123;</span><br><span class="line">    int[] number = new int[num_people];</span><br><span class="line">    int num = 1;</span><br><span class="line">    int i = 0;</span><br><span class="line">    while (candies &gt; 0) &#123;</span><br><span class="line"></span><br><span class="line">      number[i] += num;</span><br><span class="line">      candies -= num;</span><br><span class="line">      i++;</span><br><span class="line">      if (i == num_people) &#123;</span><br><span class="line">        i = 0;</span><br><span class="line">      &#125;</span><br><span class="line">      if (candies &gt; num + 1) &#123;</span><br><span class="line">        num++;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        number[i] += candies;</span><br><span class="line">        break;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    return number;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1103-Distribute-Candies-to-People（分糖果-）&quot;&gt;&lt;a href=&quot;#1103-Distribute-Candies-to-People（分糖果-）&quot; class=&quot;headerlink&quot; title=&quot;1103.Distribut
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1093 奖学金</title>
    <link href="http://yoursite.com/%E6%B4%9B%E8%B0%B7%20P1093%20%E5%A5%96%E5%AD%A6%E9%87%91.html"/>
    <id>http://yoursite.com/洛谷 P1093 奖学金.html</id>
    <published>2019-07-24T17:27:00.000Z</published>
    <updated>2019-08-01T04:53:29.388Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1093-奖学金"><a href="#洛谷-P1093-奖学金" class="headerlink" title="洛谷 P1093 奖学金"></a>洛谷 P1093 奖学金</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problem/P1093" target="_blank" rel="noopener">https://www.luogu.org/problem/P1093</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>某小学最近得到了一笔赞助，打算拿出其中一部分为学习成绩优秀的前5名学生发奖学金。期末，每个学生都有3门课的成绩:语文、数学、英语。先按总分从高到低排序，如果两个同学总分相同，再按语文成绩从高到低排序，如果两个同学总分和语文成绩都相同，那么规定学号小的同学<br>排在前面，这样，每个学生的排序是唯一确定的。</p><p>任务：先根据输入的3门课的成绩计算总分，然后按上述规则排序，最后按排名顺序输出前五名名学生的学号和总分。注意，在前5名同学中，每个人的奖学金都不相同，因此，你必须严格按上述规则排序。例如，在某个正确答案中，如果前两行的输出数据(每行输出两个数:学号、总分)是:</p><pre><code>7 279  5 279  </code></pre><p>这两行数据的含义是:总分最高的两个同学的学号依次是7号、5号。这两名同学的总分都是 279 (总分等于输入的语文、数学、英语三科成绩之和)，但学号为7的学生语文成绩更高一些。如果你的前两名的输出数据是:</p><pre><code>5 279  7 279  </code></pre><p>则按输出错误处理，不能得分。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>共n+1行。</p><p>第1行为一个正整数n(≤300)，表示该校参加评选的学生人数。</p><p>第2到n+1行，每行有3个用空格隔开的数字，每个数字都在0到100之间。第j行的3个数字依次表示学号为j-1的学生的语文、数学、英语的成绩。每个学生的学号按照输入顺序编号为1~n（恰好是输入数据的行号减1）。</p><p>所给的数据都是正确的，不必检验。</p><p>//感谢 黄小U饮品 修正输入格式</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>共5行，每行是两个用空格隔开的正整数，依次表示前5名学生的学号和总分。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入 #1复制<br>    　　6<br>    　　90 67 80<br>    　　87 66 91<br>    　　78 89 91<br>    　　88 99 77<br>    　　67 89 64<br>    　　78 89 98</p><p>输出 #1复制</p><pre><code>　　6 265　　4 264　　3 258　　2 244　　1 237</code></pre><p>输入 #2</p><pre><code>　　8　　80 89 89　　88 98 78　　90 67 80　　87 66 91　　78 89 91　　88 99 77　　67 89 64　　78 89 98</code></pre><p>输出 #2</p><pre><code>　　8 265　　2 264　　6 264　　1 258　　5 258</code></pre><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>挺不错的一道题，考虑排序优先级即可。我这里用了结构体来存放学号和成绩，借助sort和cmp设置排序，优先总分，其次语文，最后学号，最后输出前五个即可。</p><p>（这里有个坑，排序函数中要注意，学号是小的在前面，分数是大的在前面，我就因为这个错了一次）</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">struct stu</span><br><span class="line">&#123;</span><br><span class="line">    int num;</span><br><span class="line">    int c;</span><br><span class="line">    int m;</span><br><span class="line">    int e;</span><br><span class="line">    int score;</span><br><span class="line">&#125;s[301];</span><br><span class="line"></span><br><span class="line">bool cmp(stu a,stu b)</span><br><span class="line">&#123;</span><br><span class="line">    if(a.score!=b.score)</span><br><span class="line">    &#123;</span><br><span class="line">        return a.score&gt;b.score;</span><br><span class="line">    &#125;</span><br><span class="line">    else if(a.c!=b.c)</span><br><span class="line">    &#123;</span><br><span class="line">        return a.c&gt;b.c;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        return a.num&lt;b.num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    for(int i=0;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i].num=i+1;</span><br><span class="line">        cin&gt;&gt;s[i].c&gt;&gt;s[i].m&gt;&gt;s[i].e;</span><br><span class="line">        s[i].score=s[i].c+s[i].m+s[i].e;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(s,s+n,cmp);    </span><br><span class="line">    for(int i=0;i&lt;5;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;s[i].num&lt;&lt;&quot; &quot;&lt;&lt;s[i].score&lt;&lt;&quot; &quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1093-奖学金&quot;&gt;&lt;a href=&quot;#洛谷-P1093-奖学金&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1093 奖学金&quot;&gt;&lt;/a&gt;洛谷 P1093 奖学金&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;
      
    
    </summary>
    
      <category term="洛谷" scheme="http://yoursite.com/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>LeetCode 38. Count and Say</title>
    <link href="http://yoursite.com/LeetCode%2038.%20Count%20and%20Say.html"/>
    <id>http://yoursite.com/LeetCode 38. Count and Say.html</id>
    <published>2019-07-23T18:55:00.000Z</published>
    <updated>2019-08-01T06:18:40.779Z</updated>
    
    <content type="html"><![CDATA[<h2 id="38-Count-and-Say（报数）"><a href="#38-Count-and-Say（报数）" class="headerlink" title="38.Count and Say（报数）"></a>38.Count and Say（报数）</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://leetcode-cn.com/problems/count-and-say/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/count-and-say/</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>报数序列是一个整数序列，按照其中的整数的顺序进行报数，得到下一个数。其前五项如下：</p><ol><li>1  </li><li>11  </li><li>21  </li><li>1211  </li><li>111221<br>1 被读作  “one 1”  (“一个一”) , 即 11。<br>11 被读作 “two 1s” (“两个一”）, 即 21。<br>21 被读作 “one 2”,  “one 1” （”一个二” ,  “一个一”) , 即 1211。</li></ol><p>给定一个正整数 n（1 ≤ n ≤ 30），输出报数序列的第 n 项。</p><p>注意：整数顺序将表示为一个字符串。</p><p>示例 1:</p><pre><code>输入: 1  输出: &quot;1&quot;  </code></pre><p>示例 2:</p><pre><code>输入: 4  输出: &quot;1211&quot;</code></pre><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>怎么说呢，一道题目很绕的简单题。思路就是每次得到的都是基于上次的字符串，第三次21，一个2一个1，第四次就是1211，第五次就是11+12+21，以此类推。找到规律之后就是简单的遍历了。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">public String countAndSay(int n) &#123;</span><br><span class="line">  String str = &quot;1&quot;;</span><br><span class="line"></span><br><span class="line">  for (int i = 2; i &lt;= n; i++) &#123;</span><br><span class="line">    StringBuilder sb = new StringBuilder();</span><br><span class="line">    char old = str.charAt(0);</span><br><span class="line">    int num = 1;</span><br><span class="line">    for (int j = 1; j &lt; str.length(); j++) &#123;</span><br><span class="line">      char one = str.charAt(j);</span><br><span class="line">      if (one == old) &#123;</span><br><span class="line">        num++;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        sb.append(num);</span><br><span class="line">        sb.append(old);</span><br><span class="line">        old = one;</span><br><span class="line">        num = 1;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sb.append(num);</span><br><span class="line">    sb.append(old);</span><br><span class="line">    str = sb.toString();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  return str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;38-Count-and-Say（报数）&quot;&gt;&lt;a href=&quot;#38-Count-and-Say（报数）&quot; class=&quot;headerlink&quot; title=&quot;38.Count and Say（报数）&quot;&gt;&lt;/a&gt;38.Count and Say（报数）&lt;/h2&gt;&lt;
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 201803-2 碰撞的小球</title>
    <link href="http://yoursite.com/CCF%20201803-2%20%E7%A2%B0%E6%92%9E%E7%9A%84%E5%B0%8F%E7%90%83.html"/>
    <id>http://yoursite.com/CCF 201803-2 碰撞的小球.html</id>
    <published>2019-07-23T17:53:00.000Z</published>
    <updated>2019-08-01T05:24:23.985Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-201803-2-碰撞的小球"><a href="#CCF-201803-2-碰撞的小球" class="headerlink" title="CCF 201803-2 碰撞的小球"></a>CCF 201803-2 碰撞的小球</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>数轴上有一条长度为L（L为偶数)的线段，左端点在原点，右端点在坐标L处。有n个不计体积的小球在线段上，开始时所有的小球都处在偶数坐标上，速度方向向右，速度大小为1单位长度每秒。<br>当小球到达线段的端点（左端点或右端点）的时候，会立即向相反的方向移动，速度大小仍然为原来大小。<br>当两个小球撞到一起的时候，两个小球会分别向与自己原来移动的方向相反的方向，以原来的速度大小继续移动。<br>现在，告诉你线段的长度L，小球数量n，以及n个小球的初始位置，请你计算t秒之后，各个小球的位置。</p><h4 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h4><p>因为所有小球的初始位置都为偶数，而且线段的长度为偶数，可以证明，不会有三个小球同时相撞，小球到达线段端点以及小球之间的碰撞时刻均为整数。<br>同时也可以证明两个小球发生碰撞的位置一定是整数（但不一定是偶数）。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入的第一行包含三个整数n, L, t，用空格分隔，分别表示小球的个数、线段长度和你需要计算t秒之后小球的位置。<br>第二行包含n个整数a1, a2, …, an，用空格分隔，表示初始时刻n个小球的位置。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一行包含n个整数，用空格分隔，第i个整数代表初始时刻位于ai的小球，在t秒之后的位置。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><p>3 10 5<br>4 6 8</p><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><p>7 9 9</p><h4 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h4><p>初始时，三个小球的位置分别为4, 6, 8。<br><img src="http://118.190.20.162/RequireFile.do?fid=b6beJN6e" alt><br>一秒后，三个小球的位置分别为5, 7, 9。<br><img src="http://118.190.20.162/RequireFile.do?fid=Ab8QmfeR" alt><br>两秒后，第三个小球碰到墙壁，速度反向，三个小球位置分别为6, 8, 10。<br><img src="http://118.190.20.162/RequireFile.do?fid=fgQLYbNn" alt><br>三秒后，第二个小球与第三个小球在位置9发生碰撞，速度反向（注意碰撞位置不一定为偶数），三个小球位置分别为7, 9, 9。<br><img src="http://118.190.20.162/RequireFile.do?fid=erfyNJDT" alt><br>四秒后，第一个小球与第二个小球在位置8发生碰撞，速度反向，第三个小球碰到墙壁，速度反向，三个小球位置分别为8, 8, 10。<br><img src="http://118.190.20.162/RequireFile.do?fid=m5EBf6q8" alt><br>五秒后，三个小球的位置分别为7, 9, 9。<br><img src="http://118.190.20.162/RequireFile.do?fid=JRHaHt4T" alt></p><h4 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>10 22 30  14 12 16 6 10 2 8 20 18 4</code></pre><h4 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h4><pre><code>6 6 8 2 4 0 4 12 10 2</code></pre><h4 id="数据规模和约定"><a href="#数据规模和约定" class="headerlink" title="数据规模和约定"></a>数据规模和约定</h4><p>对于所有评测用例，1 ≤ n ≤ 100，1 ≤ t ≤ 100，2 ≤ L ≤ 1000，0 &lt; ai &lt; L。L为偶数。<br>保证所有小球的初始位置互不相同且均为偶数。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>题目挺有意思的，借助碰撞来修改速度，按时间来运动，得到最后结果。</p><p>我建立了三个数组，place（小球当前时间点的坐标），speed（小球速度，1正向-1反向），line（线段上面是否有小球）；如果line上存在冲突，二者都反向运动；撞到端点也是，最后输出place即可。</p><p>（ccf是不是不能用memset，我连续运行错误三次，偷懒都不行）。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int place[1002];</span><br><span class="line">int speed[1002];</span><br><span class="line">int line[1002];</span><br><span class="line">int n,l,t;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;l&gt;&gt;t;</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;place[i];</span><br><span class="line">speed[i]=1;</span><br><span class="line">&#125;</span><br><span class="line">for(int i=0;i&lt;t;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(int j=0;j&lt;=l;j++)</span><br><span class="line">line[j]=0;</span><br><span class="line">for(int j=1;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">place[j] += speed[j];</span><br><span class="line">if(place[j]==0||place[j]==l)</span><br><span class="line">&#123;</span><br><span class="line">speed[j] = (-1)*speed[j];</span><br><span class="line">&#125;</span><br><span class="line">if(line[place[j]]==0)</span><br><span class="line">&#123;</span><br><span class="line">line[place[j]] = j;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">speed[line[place[j]]] = (-1)*speed[line[place[j]]];</span><br><span class="line">speed[j] = (-1)*speed[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;place[i]&lt;&lt;&quot; &quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-201803-2-碰撞的小球&quot;&gt;&lt;a href=&quot;#CCF-201803-2-碰撞的小球&quot; class=&quot;headerlink&quot; title=&quot;CCF 201803-2 碰撞的小球&quot;&gt;&lt;/a&gt;CCF 201803-2 碰撞的小球&lt;/h2&gt;&lt;h3 id=&quot;题
      
    
    </summary>
    
      <category term="CCF" scheme="http://yoursite.com/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 201803-1 跳一跳</title>
    <link href="http://yoursite.com/CCF%20201803-1%20%E8%B7%B3%E4%B8%80%E8%B7%B3.html"/>
    <id>http://yoursite.com/CCF 201803-1 跳一跳.html</id>
    <published>2019-07-22T19:27:00.000Z</published>
    <updated>2019-08-01T05:21:36.469Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-201803-1-跳一跳"><a href="#CCF-201803-1-跳一跳" class="headerlink" title="CCF 201803-1 跳一跳"></a>CCF 201803-1 跳一跳</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>近来，跳一跳这款小游戏风靡全国，受到不少玩家的喜爱。<br>简化后的跳一跳规则如下：玩家每次从当前方块跳到下一个方块，如果没有跳到下一个方块上则游戏结束。<br>如果跳到了方块上，但没有跳到方块的中心则获得1分；跳到方块中心时，若上一次的得分为1分或这是本局游戏的第一次跳跃则此次得分为2分，否则此次得分比上一次得分多两分（即连续跳到方块中心时，总得分将+2，+4，+6，+8…）。<br>现在给出一个人跳一跳的全过程，请你求出他本局游戏的得分（按照题目描述的规则）。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入包含多个数字，用空格分隔，每个数字都是1，2，0之一，1表示此次跳跃跳到了方块上但是没有跳到中心，2表示此次跳跃跳到了方块上并且跳到了方块中心，0表示此次跳跃没有跳到方块上（此时游戏结束）。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，为本局游戏的得分（在本题的规则下）。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>1 1 2 2 2 1 1 2 2 0</code></pre><h4 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>22</code></pre><h4 id="数据规模和约定"><a href="#数据规模和约定" class="headerlink" title="数据规模和约定"></a>数据规模和约定</h4><p>对于所有评测用例，输入的数字不超过30个，保证0正好出现一次且为最后一个数字。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>正常题目，输入考虑一下变化关系，注意+2和归1即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt; </span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int sum=0;</span><br><span class="line">int n;</span><br><span class="line">int score=1;</span><br><span class="line"></span><br><span class="line">while(true)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">if(n==1)</span><br><span class="line">&#123;</span><br><span class="line">score=1;</span><br><span class="line">sum+=score;</span><br><span class="line">&#125;</span><br><span class="line">else if(n==2)</span><br><span class="line">&#123;</span><br><span class="line">if(score==1)</span><br><span class="line">&#123;</span><br><span class="line">score=2;</span><br><span class="line">sum+=score;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">score+=2;</span><br><span class="line">sum+=score;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else if(n==0)</span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;sum;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-201803-1-跳一跳&quot;&gt;&lt;a href=&quot;#CCF-201803-1-跳一跳&quot; class=&quot;headerlink&quot; title=&quot;CCF 201803-1 跳一跳&quot;&gt;&lt;/a&gt;CCF 201803-1 跳一跳&lt;/h2&gt;&lt;h3 id=&quot;题目&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="CCF" scheme="http://yoursite.com/categories/CCF/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1603 斯诺登的密码</title>
    <link href="http://yoursite.com/%E6%B4%9B%E8%B0%B7%20P1603%20%E6%96%AF%E8%AF%BA%E7%99%BB%E7%9A%84%E5%AF%86%E7%A0%81.html"/>
    <id>http://yoursite.com/洛谷 P1603 斯诺登的密码.html</id>
    <published>2019-07-21T21:12:00.000Z</published>
    <updated>2019-08-01T05:03:35.658Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1603-斯诺登的密码"><a href="#洛谷-P1603-斯诺登的密码" class="headerlink" title="洛谷 P1603 斯诺登的密码"></a>洛谷 P1603 斯诺登的密码</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problemnew/show/P1603" target="_blank" rel="noopener">https://www.luogu.org/problemnew/show/P1603</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h4><p>根据斯诺登事件出的一道水题</p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>题目描述</p><p>2013年X月X日，俄罗斯办理了斯诺登的护照，于是他混迹于一架开往委内瑞拉的飞机。但是，这件事情太不周密了，因为FBI的间谍早已获悉他的具体位置—-<br>但这不是最重要的—-最重要的是如果要去委内瑞拉，那么就要经过古巴，而经过古巴的路在美国的掌控之中。</p><p>丧心病狂的奥巴马迫降斯诺登的飞机，搜查时却发现，斯诺登杳无踪迹。但是，在据说是斯诺登的座位上，发现了一张纸条。纸条由纯英文构成：Obama is a two<br>five<br>zero.（以”.”结束输出，只有6个单词+一个句号，句子开头如没有大写亦为合法）这句话虽然有点无厘头，但是警官陈珺骛发现这是一条极其重要的线索。他在斯诺登截获的一台笔记本中找到了一个C++程序，输入这条句子后立马给出了相对应的密码。陈珺鹜高兴得晕了过去，身为警官的你把字条和程序带上了飞机，准备飞往曼哈顿国际机场，但是在飞机上检查的时候发现<br>—-程序被粉碎了！飞机抵达华盛顿只剩5分钟，你必须在这5分钟内编写（杜撰）一个程序，免受上司的10000000000%10大板。破译密码的步骤如下：</p><p>（1）找出句子中所有用英文表示的数字(≤20)，列举在下：</p><p>正规：one two three four five six seven eight nine ten eleven twelve thirteen<br>fourteen fifteen sixteen seventeen eighteen nineteen twenty</p><p>非正规：a both another first second third</p><p>（2）将这些数字平方后%100，如00,05,11,19,86,99。</p><p>（3）把这些两位数按数位排成一行，组成一个新数，如果开头为0，就去0。</p><p>（4）找出所有排列方法中最小的一个数，即为密码。</p><p>// 数据已经修正 By absi2011 如果还有问题请联系我</p><h4 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h4><p>输入格式：</p><p>一个含有6个单词的句子。</p><p>输出格式：</p><p>一个整型变量（密码）。如果没有符合要求的数字出现，则输出0。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入样例#1：  </p><pre><code>　　Black Obama is two five zero .</code></pre><p>输出样例#1：  </p><pre><code>　　425</code></pre><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>好久没见到这么lan的题目了，毫无意义，拿两个字符串数组，一个存放单词，一个存放对应数字，之后循环判断一下输出条件，00不输出，0x考虑是否在开头，别的正常输出即可。（那俩数组还是我ctrl+c的）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"> </span><br><span class="line">string num[27] = &#123;&quot;one&quot;,&quot;two&quot;,&quot;three&quot;,&quot;four&quot;,&quot;five&quot;,&quot;six&quot;,&quot;seven&quot;,&quot;eight&quot;,&quot;nine&quot;,&quot;ten&quot;,&quot;eleven&quot;,&quot;twelve&quot;,</span><br><span class="line">&quot;thirteen&quot;,&quot;fourteen&quot;,&quot;fifteen&quot;,&quot;sixteen&quot;,&quot;seventeen&quot;,&quot;eighteen&quot;,&quot;nineteen&quot;,&quot;twenty&quot;,&quot;a&quot;,&quot;both&quot;,&quot;another&quot;,&quot;first&quot;,&quot;second&quot;,&quot;third&quot;&#125;;</span><br><span class="line">string sqare[27]=&#123;&quot;01&quot;,&quot;04&quot;,&quot;09&quot;,&quot;16&quot;,&quot;25&quot;,&quot;36&quot;,&quot;49&quot;,&quot;64&quot;,&quot;81&quot;,&quot;100&quot;,&quot;21&quot;,&quot;44&quot;,&quot;69&quot;,&quot;96&quot;,&quot;25&quot;,&quot;56&quot;,&quot;89&quot;,&quot;24&quot;,&quot;61&quot;,&quot;00&quot;,&quot;01&quot;,&quot;04&quot;,&quot;01&quot;,&quot;01&quot;,&quot;04&quot;,&quot;09&quot;&#125;;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">string word[6];</span><br><span class="line">string ans[6];</span><br><span class="line">int len = 0;</span><br><span class="line"></span><br><span class="line">for(int i=0;i&lt;6;i++)</span><br><span class="line">cin&gt;&gt;word[i];</span><br><span class="line"></span><br><span class="line">for(int i=0;i&lt;6;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(int j=0;j&lt;26;j++)</span><br><span class="line">&#123;</span><br><span class="line">if(word[i]==num[j])</span><br><span class="line">ans[len++]=sqare[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sort(ans, ans+len);</span><br><span class="line"></span><br><span class="line">if(len == 0) </span><br><span class="line">cout&lt;&lt;&quot;0&quot;;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">for(int i=0;i&lt;len;i++)</span><br><span class="line">&#123;</span><br><span class="line">if(i==0)</span><br><span class="line">&#123;</span><br><span class="line">if(ans[i]==&quot;00&quot;)</span><br><span class="line">continue;</span><br><span class="line">else if(ans[i][0]==&apos;0&apos;)</span><br><span class="line">cout&lt;&lt;ans[i][1];</span><br><span class="line">&#125;</span><br><span class="line">else if(i=0)</span><br><span class="line">cout&lt;&lt;ans[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1603-斯诺登的密码&quot;&gt;&lt;a href=&quot;#洛谷-P1603-斯诺登的密码&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1603 斯诺登的密码&quot;&gt;&lt;/a&gt;洛谷 P1603 斯诺登的密码&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="洛谷" scheme="http://yoursite.com/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>LeetCode 169. Majority Element</title>
    <link href="http://yoursite.com/LeetCode%20169.%20Majority%20Element.html"/>
    <id>http://yoursite.com/LeetCode 169. Majority Element.html</id>
    <published>2019-07-21T17:47:00.000Z</published>
    <updated>2019-08-01T06:48:46.673Z</updated>
    
    <content type="html"><![CDATA[<h2 id="169-Majority-Element（求众数）"><a href="#169-Majority-Element（求众数）" class="headerlink" title="169.Majority Element（求众数）"></a>169.Majority Element（求众数）</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://leetcode-cn.com/problems/majority-element/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/majority-element/</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>给定一个大小为 n 的数组，找到其中的众数。众数是指在数组中出现次数大于 ⌊ n/2 ⌋ 的元素。</p><p>你可以假设数组是非空的，并且给定的数组总是存在众数。</p><p>示例 1:</p><p>输入: [3,2,3]<br>输出: 3<br>示例 2:</p><p>输入: [2,2,1,1,1,2,2]<br>输出: 2</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这题很有趣，多种方法都能解决。我一开始想到的是1.哈希表：数据添加后规模最大的一个就是众数。2.排序：快排或归并排序，中位数就是众数。</p><p>之后看了别人的解法，发现了一种新的方法：摩尔投票算法。摩尔投票法的基本思想很简单，在每一轮投票过程中，从数组中找出一对不同的元素，将其从数组中删除。这样不断的删除直到无法再进行投票，如果数组为空，则没有任何元素出现的次数超过该数组长度的一半。如果只存在一种元素，那么这个元素就是目标元素。</p><p>初始化 count = 1;number =<br>nums[0];之后遍历，如果数字和number相同，count++，不同，count–，count=0时重置number和count，如果众数数量大于n/2，最后的数就是这个。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public static int majorityElement(int[] nums) &#123;</span><br><span class="line">    int count = 0;</span><br><span class="line">    int number = nums[0];</span><br><span class="line">    for (int i = 0; i &lt; nums.length; i++) &#123;</span><br><span class="line">      if (count == 0) &#123;</span><br><span class="line">        number = nums[i];</span><br><span class="line">        count = 1;</span><br><span class="line">      &#125; else if (number != nums[i]) &#123;</span><br><span class="line">        count--;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        count++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return number;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;169-Majority-Element（求众数）&quot;&gt;&lt;a href=&quot;#169-Majority-Element（求众数）&quot; class=&quot;headerlink&quot; title=&quot;169.Majority Element（求众数）&quot;&gt;&lt;/a&gt;169.Majorit
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
  </entry>
  
  <entry>
    <title>LeetCode 1047. Remove All Adjacent Duplicates In String</title>
    <link href="http://yoursite.com/LeetCode%201047.%20Remove%20All%20Adjacent%20Duplicates%20In%20String.html"/>
    <id>http://yoursite.com/LeetCode 1047. Remove All Adjacent Duplicates In String.html</id>
    <published>2019-07-20T18:32:00.000Z</published>
    <updated>2019-08-01T06:07:49.595Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1047-Remove-All-Adjacent-Duplicates-In-String（删除字符串中的所有相邻重复项）"><a href="#1047-Remove-All-Adjacent-Duplicates-In-String（删除字符串中的所有相邻重复项）" class="headerlink" title="1047.Remove All Adjacent Duplicates In String（删除字符串中的所有相邻重复项）"></a>1047.Remove All Adjacent Duplicates In String（删除字符串中的所有相邻重复项）</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://leetcode-cn.com/problems/remove-all-adjacent-duplicates-in-string/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/remove-all-adjacent-duplicates-in-string/</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>给出由小写字母组成的字符串 S，重复项删除操作会选择两个相邻且相同的字母，并删除它们。</p><p>在 S 上反复执行重复项删除操作，直到无法继续删除。</p><p>在完成所有重复项删除操作后返回最终的字符串。答案保证唯一。</p><p>示例：</p><p>输入：”abbaca”<br>输出：”ca”<br>解释：<br>例如，在 “abbaca” 中，我们可以删除 “bb” 由于两字母相邻且相同，这是此时唯一可以执行删除操作的重复项。之后我们得到字符串<br>“aaca”，其中又只有 “aa” 可以执行重复项删除操作，所以最后的字符串为 “ca”。  </p><p>提示：</p><p>1 &lt;= S.length &lt;= 20000<br>S 仅由小写英文字母组成。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>我这里借助了栈，把字母塞进去，如果下一个和上一个相同就出栈，不然就入栈，最后借助stringbuffer转置一下，生成字符串。内存超过100%，但是时间超过30%，就很烦。</p><p>（idea改变了我的代码规范…….）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public static String removeDuplicates(String S) &#123;</span><br><span class="line">  char[] ch = S.toCharArray();</span><br><span class="line">  Stack stack = new Stack();</span><br><span class="line">  int i = 0;</span><br><span class="line">  while (i &lt; ch.length) &#123;</span><br><span class="line">    if (stack.empty()) &#123;</span><br><span class="line">      stack.push(ch[i]);</span><br><span class="line">    &#125; else if (stack.peek().equals(ch[i])) &#123;</span><br><span class="line">      stack.pop();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      stack.push(ch[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    i++;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  StringBuilder sb = new StringBuilder();</span><br><span class="line">  while (!stack.empty()) &#123;</span><br><span class="line">    sb.append(stack.pop());</span><br><span class="line">  &#125;</span><br><span class="line">  return sb.reverse().toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1047-Remove-All-Adjacent-Duplicates-In-String（删除字符串中的所有相邻重复项）&quot;&gt;&lt;a href=&quot;#1047-Remove-All-Adjacent-Duplicates-In-String（删除字符串中的所有相邻重复
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
  </entry>
  
  <entry>
    <title>LeetCode 12. Integer to Roman</title>
    <link href="http://yoursite.com/LeetCode%2012.%20Integer%20to%20Roman.html"/>
    <id>http://yoursite.com/LeetCode 12. Integer to Roman.html</id>
    <published>2019-07-20T17:43:00.000Z</published>
    <updated>2019-08-01T06:17:40.067Z</updated>
    
    <content type="html"><![CDATA[<h2 id="12-Integer-to-Roman（整数转罗马数字）"><a href="#12-Integer-to-Roman（整数转罗马数字）" class="headerlink" title="12.Integer to Roman（整数转罗马数字）"></a>12.Integer to Roman（整数转罗马数字）</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://leetcode-cn.com/problems/integer-to-roman/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/integer-to-roman/</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>罗马数字包含以下七种字符： I， V， X， L，C，D 和 M。</p><pre><code>字符 数值  I 1  V 5  X 10  L 50  C 100  D 500  M 1000  </code></pre><p>例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5<br>减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：</p><p>I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。<br>X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。<br>C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。<br>给定一个整数，将其转为罗马数字。输入确保在 1 到 3999 的范围内。</p><p>示例 1:</p><pre><code>输入: 3  输出: &quot;III&quot;  </code></pre><p>示例 2:</p><pre><code>输入: 4  输出: &quot;IV&quot;  </code></pre><p>示例 3:</p><pre><code>输入: 9  输出: &quot;IX&quot;  </code></pre><p>示例 4:</p><pre><code>输入: 58  输出: &quot;LVIII&quot;  解释: L = 50, V = 5, III = 3.  </code></pre><p>示例 5:</p><pre><code>输入: 1994  输出: &quot;MCMXCIV&quot;  解释: M = 1000, CM = 900, XC = 90, IV = 4.</code></pre><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>倒也不是很麻烦，就是分类筛选，对于字符串进行添加操作，1000级和1级需要借助while循环，别的数直接用if进行一次判断即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public static String intToRoman(int num) &#123;</span><br><span class="line">    StringBuilder str = new StringBuilder();</span><br><span class="line">    while (num &gt;= 1000) &#123;</span><br><span class="line">      str.append(&quot;M&quot;);</span><br><span class="line">      num = num - 1000;</span><br><span class="line">    &#125;</span><br><span class="line">    if (num &gt;= 900) &#123;</span><br><span class="line">      str.append(&quot;CM&quot;);</span><br><span class="line">      num = num - 900;</span><br><span class="line">    &#125;</span><br><span class="line">    if (num &gt;= 500) &#123;</span><br><span class="line">      str.append(&quot;D&quot;);</span><br><span class="line">      num = num - 500;</span><br><span class="line">    &#125;</span><br><span class="line">    if (num &gt;= 400 &amp;&amp; num &lt; 500) &#123;</span><br><span class="line">      str.append(&quot;CD&quot;);</span><br><span class="line">      num = num - 400;</span><br><span class="line">    &#125;</span><br><span class="line">    while (num &gt;= 100) &#123;</span><br><span class="line">      str.append(&quot;C&quot;);</span><br><span class="line">      num = num - 100;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (num &gt;= 90) &#123;</span><br><span class="line">      str.append(&quot;XC&quot;);</span><br><span class="line">      num = num - 90;</span><br><span class="line">    &#125;</span><br><span class="line">    if (num &gt;= 50) &#123;</span><br><span class="line">      str.append(&quot;L&quot;);</span><br><span class="line">      num = num - 50;</span><br><span class="line">    &#125;</span><br><span class="line">    if (num &gt;= 40 &amp;&amp; num &lt; 50) &#123;</span><br><span class="line">      str.append(&quot;XL&quot;);</span><br><span class="line">      num = num - 40;</span><br><span class="line">    &#125;</span><br><span class="line">    while (num &gt;= 10) &#123;</span><br><span class="line">      str.append(&quot;X&quot;);</span><br><span class="line">      num = num - 10;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (num &gt;= 9) &#123;</span><br><span class="line">      str.append(&quot;IX&quot;);</span><br><span class="line">      num = num - 9;</span><br><span class="line">    &#125;</span><br><span class="line">    if (num &gt;= 5) &#123;</span><br><span class="line">      str.append(&quot;V&quot;);</span><br><span class="line">      num = num - 5;</span><br><span class="line">    &#125;</span><br><span class="line">    if (num &gt;= 4 &amp;&amp; num &lt; 5) &#123;</span><br><span class="line">      str.append(&quot;IV&quot;);</span><br><span class="line">      num = num - 4;</span><br><span class="line">    &#125;</span><br><span class="line">    while (num &gt;= 1) &#123;</span><br><span class="line">      str.append(&quot;I&quot;);</span><br><span class="line">      num = num - 1;</span><br><span class="line">    &#125;</span><br><span class="line">    return str.toString();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;12-Integer-to-Roman（整数转罗马数字）&quot;&gt;&lt;a href=&quot;#12-Integer-to-Roman（整数转罗马数字）&quot; class=&quot;headerlink&quot; title=&quot;12.Integer to Roman（整数转罗马数字）&quot;&gt;&lt;/a&gt;12
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1012 拼数</title>
    <link href="http://yoursite.com/%E6%B4%9B%E8%B0%B7%20P1012%20%E6%8B%BC%E6%95%B0.html"/>
    <id>http://yoursite.com/洛谷 P1012 拼数.html</id>
    <published>2019-07-18T21:52:00.000Z</published>
    <updated>2019-08-01T03:53:20.740Z</updated>
    
    <content type="html"><![CDATA[<h2 id="洛谷-P1012-拼数"><a href="#洛谷-P1012-拼数" class="headerlink" title="洛谷 P1012 拼数"></a>洛谷 P1012 拼数</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.luogu.org/problemnew/show/P1012" target="_blank" rel="noopener">https://www.luogu.org/problemnew/show/P1012</a></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>设有n个正整数(n≤20)，将它们联接成一排，组成一个最大的多位整数。</p><p>例如：n=3时，3个整数13,312,343联接成的最大整数为：34331213  </p><p>又如：n=4时，4个整数7,13,4,246联接成的最大整数为：7424613  </p><h4 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h4><p>输入格式：</p><p>第一行，一个正整数n。</p><p>第二行，n个正整数。</p><p>输出格式：</p><p>一个正整数，表示最大的整数</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p>输入样例#1：  </p><pre><code>　　3　　13 312 343</code></pre><p>输出样例#1：  </p><pre><code>　　34331213  </code></pre><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这题如果是第一次做会有点难度，但是我以前做过同类的，借助字典序来算就会简单很多，对于字典序来说1234&lt;3412，那么12和34这两个数就可以通过字典序来比较，这里设置一个比较函数compare，比较a+b和b+a的字典序，这边设置的是34在12的前面，所以要先输出（3412&gt;1234）.之后借助sort函数排序，按照顺序输出即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt; </span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">bool compare(string a,string b)</span><br><span class="line">&#123;</span><br><span class="line">    return a+b&gt;b+a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    string num[n];</span><br><span class="line">    for(int i=0;i&lt;n;i++)</span><br><span class="line">        cin&gt;&gt;num[i];</span><br><span class="line">    sort(num,num+n,compare);</span><br><span class="line">    for(int i=0;i&lt;n;i++)</span><br><span class="line">        cout&lt;&lt;num[i];</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;洛谷-P1012-拼数&quot;&gt;&lt;a href=&quot;#洛谷-P1012-拼数&quot; class=&quot;headerlink&quot; title=&quot;洛谷 P1012 拼数&quot;&gt;&lt;/a&gt;洛谷 P1012 拼数&lt;/h2&gt;&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;head
      
    
    </summary>
    
      <category term="洛谷" scheme="http://yoursite.com/categories/%E6%B4%9B%E8%B0%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>CCF 201809-2 买菜</title>
    <link href="http://yoursite.com/CCF%20201809-2%20%E4%B9%B0%E8%8F%9C.html"/>
    <id>http://yoursite.com/CCF 201809-2 买菜.html</id>
    <published>2019-07-17T21:20:00.000Z</published>
    <updated>2019-08-01T05:20:04.507Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCF-201809-2-买菜"><a href="#CCF-201809-2-买菜" class="headerlink" title="CCF 201809-2 买菜"></a>CCF 201809-2 买菜</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>小H和小W来到了一条街上，两人分开买菜，他们买菜的过程可以描述为，去店里买一些菜然后去旁边的一个广场把菜装上车，两人都要买n种菜，所以也都要装n次车。具体的，对于小H来说有n个不相交的时间段[a1,b1],[a2,b2]…[an,bn]在装车，对于小W来说有n个不相交的时间段[c1,d1],[c2,d2]…[cn,dn]在装车。其中，一个时间段[s,<br>t]表示的是从时刻s到时刻t这段时间，时长为t-s。<br>由于他们是好朋友，他们都在广场上装车的时候会聊天，他们想知道他们可以聊多长时间。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入的第一行包含一个正整数n，表示时间段的数量。<br>接下来n行每行两个数ai，bi，描述小H的各个装车的时间段。<br>接下来n行每行两个数ci，di，描述小W的各个装车的时间段。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一行，一个正整数，表示两人可以聊多长时间。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><pre><code>4  1 3  5 6  9 13  14 15  2 4  5 7  10 11  13 14</code></pre><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><pre><code>3</code></pre><h4 id="数据规模和约定"><a href="#数据规模和约定" class="headerlink" title="数据规模和约定"></a>数据规模和约定</h4><p>对于所有的评测用例，1 ≤ n ≤ 2000, ai &lt; bi &lt; ai+1，ci &lt; di &lt; ci+1,对于所有的i(1 ≤ i ≤ n)有，1 ≤<br>ai, bi, ci, di ≤ 1000000。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>简单题，但是不知道为啥我错了几次，真让人悲伤。设定一个数组当做时间轴，初始化为0，之后如果有人装车，那么时间轴在那段时间上+1，如果二人都在那时候装车，那么那个位置的数应该是2，找到2的数量即可。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int Num =  1000000;</span><br><span class="line">int time[1000000];</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">int max=0;</span><br><span class="line"></span><br><span class="line">for(int i=0;i&lt;Num;i++)</span><br><span class="line">time[i]=0;</span><br><span class="line"></span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">int a,b;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">if(b&gt;max)</span><br><span class="line">max = b;</span><br><span class="line">for(int j=a;j&lt;b;j++)</span><br><span class="line">time[j]++;</span><br><span class="line">&#125;</span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">int c,d;</span><br><span class="line">cin&gt;&gt;c&gt;&gt;d;</span><br><span class="line">if(d&gt;max)</span><br><span class="line">max = d;</span><br><span class="line">for(int j=c;j&lt;d;j++)</span><br><span class="line">time[j]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int sum=0;</span><br><span class="line">for(int i = 1;i&lt;max;i++)</span><br><span class="line">&#123;</span><br><span class="line">//cout&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;time[i]&lt;&lt;endl;</span><br><span class="line">if(time[i] == 2)</span><br><span class="line">&#123;</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;sum;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCF-201809-2-买菜&quot;&gt;&lt;a href=&quot;#CCF-201809-2-买菜&quot; class=&quot;headerlink&quot; title=&quot;CCF 201809-2 买菜&quot;&gt;&lt;/a&gt;CCF 201809-2 买菜&lt;/h2&gt;&lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="CCF" scheme="http://yoursite.com/categories/CCF/"/>
    
    
  </entry>
  
</feed>
